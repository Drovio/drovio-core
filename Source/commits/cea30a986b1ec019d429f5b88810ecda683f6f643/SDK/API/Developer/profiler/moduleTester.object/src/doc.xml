<?xml version="1.0" encoding="UTF-8"?>
<manual library="API" package="Developer" namespace="\profiler">
  <class name="moduleTester" abstract="" namespace="">
    <info>
      <version/>
      <datecreated>1387555001</datecreated>
      <daterevised>1387555035</daterevised>
      <extends/>
      <implements/>
      <throws/>
      <title>Module Tester Manager</title>
      <description>Manages module tester mode.</description>
      <deprecated/>
    </info>
    <constants/>
    <properties>
      <scope type="public"/>
      <scope type="protected"/>
      <scope type="private"/>
    </properties>
    <methods>
      <scope type="public">
        <method name="activate" returntype="boolean" static="true">
          <description>Activates the tester mode for the given module.</description>
          <parameters>
            <parameter name="$moduleID" type="string" defaultvalue="">
              <description>The module id to activate. Leave empty for default value that includes all modules.</description>
            </parameter>
          </parameters>
          <returndescription>True on success, false otherwise.</returndescription>
          <throws/>
          <deprecated/>
        </method>
        <method name="deactivate" returntype="boolean" static="true">
          <description>Deactivates the tester mode for the given module.</description>
          <parameters>
            <parameter name="$moduleID" type="string" defaultvalue="">
              <description>The module id to deactivate. Leave empty to deactivate all modules.</description>
            </parameter>
          </parameters>
          <returndescription>True on success, false otherwise.</returndescription>
          <throws/>
          <deprecated/>
        </method>
        <method name="status" returntype="boolean" static="true">
          <description>The tester status for a given module.</description>
          <parameters>
            <parameter name="$moduleID" type="string" defaultvalue="">
              <description>The module id to activate. Leave empty for default value that includes all modules.</description>
            </parameter>
          </parameters>
          <returndescription>True if module is on tester mode, false otherwise.</returndescription>
          <throws/>
          <deprecated/>
        </method>
      </scope>
      <scope type="protected"/>
      <scope type="private">
        <method name="getModules" returntype="array" static="true">
          <description>Get all active modules.</description>
          <parameters/>
          <returndescription>An array of active modules.
This array may be empty meaning that no module is active or all modules are active for tester mode.</returndescription>
          <throws/>
          <deprecated/>
        </method>
        <method name="setModules" returntype="boolean" static="true">
          <description>Set all the modules given for the tester mode.</description>
          <parameters>
            <parameter name="$modules" type="array" defaultvalue="">
              <description>An array of modules to be activated.
If empty, the tester mode will be deactivated.</description>
            </parameter>
          </parameters>
          <returndescription>True on success, false on failure.</returndescription>
          <throws/>
          <deprecated/>
        </method>
      </scope>
    </methods>
  </class>
</manual>
