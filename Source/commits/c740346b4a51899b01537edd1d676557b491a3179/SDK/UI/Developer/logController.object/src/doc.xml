<?xml version="1.0" encoding="UTF-8"?>
<manual library="UI" package="Developer" namespace="\">
  <class name="logController" abstract="" namespace="">
    <info>
      <version/>
      <datecreated>1387464089</datecreated>
      <daterevised>1395993538</daterevised>
      <extends/>
      <implements/>
      <throws/>
      <title>Visual Log Controller</title>
      <description>Shows a visual representation of the log messages so far for debugging.</description>
      <deprecated/>
    </info>
    <constants>
      <const type="" name="POOL">
        <description/>
      </const>
    </constants>
    <properties>
      <scope type="public"/>
      <scope type="protected"/>
      <scope type="private"/>
    </properties>
    <methods>
      <scope type="public">
        <method name="build" returntype="DOMElement">
          <description>Creates a toggler containing all the logs.</description>
          <parameters>
            <parameter name="$id" type="" defaultvalue="">
              <description/>
            </parameter>
          </parameters>
          <returndescription>A logController element.</returndescription>
          <throws/>
          <deprecated/>
        </method>
        <method name="getLogs" returntype="DOMelement" static="true">
          <description>Creates a toggler containing all the logs.</description>
          <parameters>
            <parameter name="$id" type="string" defaultvalue="">
              <description>The toggler id.</description>
            </parameter>
            <parameter name="$head" type="string" defaultvalue="">
              <description>The toggler head.</description>
            </parameter>
          </parameters>
          <returndescription>A toggler element.</returndescription>
          <throws/>
          <deprecated/>
        </method>
      </scope>
      <scope type="protected"/>
      <scope type="private">
        <method name="buildControls" returntype="void">
          <description>Builds the ui logger contorls.</description>
          <parameters/>
          <returndescription/>
          <throws/>
          <deprecated/>
        </method>
        <method name="getFilterBox" returntype="DOMElement">
          <description>Creates a checkbox filter box.</description>
          <parameters>
            <parameter name="$title" type="string" defaultvalue="">
              <description>The checkbox title.</description>
            </parameter>
            <parameter name="$name" type="string" defaultvalue="">
              <description>The checkbox name.</description>
            </parameter>
            <parameter name="$checked" type="boolean" defaultvalue="">
              <description>Sets the checkbox checked.</description>
            </parameter>
          </parameters>
          <returndescription>The filterbox DOMElement.</returndescription>
          <throws/>
          <deprecated/>
        </method>
        <method name="traceToDom" returntype="DOMElement" static="true">
          <description>Creates a DOMElement from a given backtrace.</description>
          <parameters>
            <parameter name="$trace" type="array" defaultvalue="">
              <description>The debug backtrace.</description>
            </parameter>
          </parameters>
          <returndescription>The backtrace DOMElement for the logger.</returndescription>
          <throws/>
          <deprecated/>
        </method>
      </scope>
    </methods>
  </class>
</manual>
