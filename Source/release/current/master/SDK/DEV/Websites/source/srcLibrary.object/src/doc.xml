<?xml version="1.0" encoding="UTF-8"?>
<manual library="DEV" package="Websites" namespace="\source">
  <class name="srcLibrary" abstract="">
    <info>
      <version>0.1</version>
      <build>1</build>
      <datecreated>1411123531</datecreated>
      <daterevised>1411123531</daterevised>
      <extends/>
      <implements/>
      <throws/>
      <title>Website Source Library Manager</title>
      <description>Handles all operations with website's source libraries.</description>
      <deprecated/>
    </info>
    <constants/>
    <properties>
      <scope type="public"/>
      <scope type="protected"/>
      <scope type="private">
        <prop type="website" name="website">
          <description>The website object.</description>
        </prop>
        <prop type="sourceMap" name="sourceMap">
          <description>The sourceMap object.</description>
        </prop>
        <prop type="vcs" name="vcs">
          <description>The source vcs manager object.</description>
        </prop>
      </scope>
    </properties>
    <methods>
      <scope type="public">
        <method name="__construct" returntype="void">
          <description>Initializes the object.</description>
          <parameters>
            <parameter name="$websiteID" type="integer" defaultvalue="">
              <description>The website id.</description>
            </parameter>
          </parameters>
          <returndescription/>
          <throws/>
          <deprecated/>
        </method>
        <method name="create" returntype="boolean">
          <description>Creates a new source library.</description>
          <parameters>
            <parameter name="$library" type="string" defaultvalue="">
              <description>The library name.</description>
            </parameter>
          </parameters>
          <returndescription>True on success, false on failure.</returndescription>
          <throws/>
          <deprecated/>
        </method>
        <method name="remove" returntype="boolean">
          <description>Remove a library from source.
The library must be empty.</description>
          <parameters>
            <parameter name="$library" type="string" defaultvalue="">
              <description>The library name.</description>
            </parameter>
          </parameters>
          <returndescription>True on success, false on failure.</returndescription>
          <throws/>
          <deprecated/>
        </method>
        <method name="getList" returntype="array">
          <description>Gets a list of all libraries in the source.</description>
          <parameters/>
          <returndescription>An array of all libraries.</returndescription>
          <throws/>
          <deprecated/>
        </method>
        <method name="getPackageList" returntype="array">
          <description>Get all packages in the given library.</description>
          <parameters>
            <parameter name="$library" type="string" defaultvalue="">
              <description>An array of all packages in the library</description>
            </parameter>
          </parameters>
          <returndescription>An array of all packages in the library.</returndescription>
          <throws/>
          <deprecated/>
        </method>
      </scope>
      <scope type="protected"/>
      <scope type="private">
        <method name="loadSourceMap" returntype="object">
          <description>Initializes the source map object for getting the source information from the source index.</description>
          <parameters/>
          <returndescription>The sourceMap object.</returndescription>
          <throws/>
          <deprecated/>
        </method>
        <method name="updateMapFile" returntype="void">
          <description>Updates the source map index file in the vcs.</description>
          <parameters/>
          <returndescription/>
          <throws/>
          <deprecated/>
        </method>
      </scope>
    </methods>
  </class>
</manual>
