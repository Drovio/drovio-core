<?xml version="1.0" encoding="UTF-8"?>
<manual library="DRVC" package="Profile" namespace="\">
  <class name="account" abstract="">
    <info>
      <version>2.0</version>
      <build>2</build>
      <datecreated>1444305826</datecreated>
      <daterevised>1444391561</daterevised>
      <extends/>
      <implements/>
      <throws/>
      <title>Account Identity</title>
      <description>Manages an account identity</description>
      <deprecated/>
    </info>
    <constants/>
    <properties>
      <scope type="public"/>
      <scope type="protected"/>
      <scope type="private">
        <prop type="boolean" name="loggedIn" static="true">
          <description>Indicates whether the account is logged in for this run.</description>
        </prop>
        <prop type="integer" name="accountID" static="true">
          <description>The current account id.</description>
        </prop>
        <prop type="integer" name="personID" static="true">
          <description>The current person id (if any).</description>
        </prop>
        <prop type="integer" name="sessionID" static="true">
          <description>The current session id.</description>
        </prop>
        <prop type="integer" name="mxID" static="true">
          <description>The current mx id.</description>
        </prop>
        <prop type="array" name="accountData" static="true">
          <description>All the stored account data.</description>
        </prop>
        <prop type="string" name="salt" static="true">
          <description>The session salt.</description>
        </prop>
        <prop type="string" name="teamName" static="true">
          <description>The team to access the identity database.</description>
        </prop>
      </scope>
    </properties>
    <methods>
      <scope type="public">
        <method name="init" returntype="void" static="true">
          <description>Initialize the identity.</description>
          <parameters>
            <parameter name="$teamName" type="string" defaultvalue="">
              <description>The team name to access the identity database.</description>
            </parameter>
          </parameters>
          <returndescription/>
          <throws/>
          <deprecated/>
        </method>
        <method name="authenticate" returntype="boolean" static="true">
          <description>Authenticates an account with the given username and password.</description>
          <parameters>
            <parameter name="$username" type="string" defaultvalue="">
              <description>The account username.
Email is also supported.</description>
            </parameter>
            <parameter name="$password" type="string" defaultvalue="">
              <description>The account's password.</description>
            </parameter>
            <parameter name="$accountID" type="integer" defaultvalue="">
              <description>The account id to authenticate.
If empty, get the current account id.
It is empty by default.</description>
            </parameter>
          </parameters>
          <returndescription>True on success, false on failure.</returndescription>
          <throws/>
          <deprecated/>
        </method>
        <method name="login" returntype="boolean" static="true">
          <description>Authenticates the account and creates an active account session.</description>
          <parameters>
            <parameter name="$username" type="string" defaultvalue="">
              <description>The account username.</description>
            </parameter>
            <parameter name="$password" type="string" defaultvalue="">
              <description>The account password.</description>
            </parameter>
            <parameter name="$rememberme" type="boolean" defaultvalue="">
              <description>Whether to remember the user or not.
Duration: 1 month.</description>
            </parameter>
          </parameters>
          <returndescription>True on success, false on authentication failure.</returndescription>
          <throws/>
          <deprecated/>
        </method>
        <method name="validate" returntype="boolean" static="true">
          <description>Validates if the user is logged in.</description>
          <parameters/>
          <returndescription>True on success, false on failure.</returndescription>
          <throws/>
          <deprecated/>
        </method>
        <method name="logout" returntype="void" static="true">
          <description>Logout the account from the system.
Delete active session.
Delete cookies.</description>
          <parameters/>
          <returndescription/>
          <throws/>
          <deprecated/>
        </method>
        <method name="switchAccount" returntype="boolean" static="true">
          <description>Switch from one account to another.</description>
          <parameters>
            <parameter name="$accountID" type="integer" defaultvalue="">
              <description>The new account id to switch to.</description>
            </parameter>
            <parameter name="$password" type="string" defaultvalue="">
              <description>The new account's password.</description>
            </parameter>
          </parameters>
          <returndescription>Returns true on success and false if the current account is locked and cannot switch or the authentication fails.</returndescription>
          <throws/>
          <deprecated/>
        </method>
        <method name="updatePassword" returntype="boolean" static="true">
          <description>Update current account password.</description>
          <parameters>
            <parameter name="$currentPassword" type="string" defaultvalue="">
              <description>The current account password.</description>
            </parameter>
            <parameter name="$newPassword" type="st" defaultvalue="">
              <description>The new account password.</description>
            </parameter>
          </parameters>
          <returndescription>True on success, false on failure.</returndescription>
          <throws/>
          <deprecated/>
        </method>
        <method name="updatePasswordByReset" returntype="boolean" static="true">
          <description>Update the account's password using the reset id from the recovery process.</description>
          <parameters>
            <parameter name="$resetID" type="string" defaultvalue="">
              <description>The reset id hash token.</description>
            </parameter>
            <parameter name="$newPassword" type="string" defaultvalue="">
              <description>The new account password.</description>
            </parameter>
          </parameters>
          <returndescription>True on success, false on failure.</returndescription>
          <throws/>
          <deprecated/>
        </method>
        <method name="rememberme" returntype="boolean" static="true">
          <description>Gets whether the system remembers the logged in account.</description>
          <parameters/>
          <returndescription>True if the system remembers the account, false otherwise.</returndescription>
          <throws/>
          <deprecated/>
        </method>
        <method name="getAccountID" returntype="integer" static="true">
          <description>Gets the current logged in account id.</description>
          <parameters/>
          <returndescription>The account id.</returndescription>
          <throws/>
          <deprecated/>
        </method>
        <method name="getMX" returntype="string" static="true">
          <description>Gets the current mx id.</description>
          <parameters/>
          <returndescription>The current mx id.</returndescription>
          <throws/>
          <deprecated/>
        </method>
        <method name="getSessionID" returntype="string" static="true">
          <description>Gets the account session id.</description>
          <parameters/>
          <returndescription>The account session id.</returndescription>
          <throws/>
          <deprecated/>
        </method>
        <method name="getPersonID" returntype="integer" static="true">
          <description>Gets the person id of the logged in account.</description>
          <parameters/>
          <returndescription>The person id.</returndescription>
          <throws/>
          <deprecated/>
        </method>
        <method name="isLocked" returntype="boolean" static="true">
          <description>Checks whether this account is locked.</description>
          <parameters/>
          <returndescription>True if locked, false otherwise.</returndescription>
          <throws/>
          <deprecated/>
        </method>
        <method name="isAdmin" returntype="boolean" static="true">
          <description>Checks whether the account is admin.</description>
          <parameters/>
          <returndescription>True if admin, false otherwise (shared).</returndescription>
          <throws/>
          <deprecated/>
        </method>
        <method name="getAccountTitle" returntype="string" static="true">
          <description>Gets the account title for the logged in account.</description>
          <parameters/>
          <returndescription>The account display title.</returndescription>
          <throws/>
          <deprecated/>
        </method>
        <method name="getUsername" returntype="mixed" static="true">
          <description>Get the account's username.</description>
          <parameters>
            <parameter name="$emailFallback" type="boolean" defaultvalue="">
              <description>Set TRUE to return the connected person's email if the account's username is empty.
It is FALSE by default.</description>
            </parameter>
          </parameters>
          <returndescription>Return the account username.
If account doesn't have username, return the email of the person connected to this account.
If there is no connected account, return NULL.</returndescription>
          <throws/>
          <deprecated/>
        </method>
        <method name="info" returntype="array" static="true">
          <description>Gets the account info.</description>
          <parameters>
            <parameter name="$accountID" type="integer" defaultvalue="">
              <description>The account id to get the information for.
Leave empty for the current account.
It is empty by default.</description>
            </parameter>
          </parameters>
          <returndescription>Returns an array of the account information.</returndescription>
          <throws/>
          <deprecated/>
        </method>
        <method name="updateInfo" returntype="boolean" static="true">
          <description>Update account information.</description>
          <parameters>
            <parameter name="$title" type="string" defaultvalue="">
              <description>The account title.</description>
            </parameter>
          </parameters>
          <returndescription>True on success, false on failure.</returndescription>
          <throws/>
          <deprecated/>
        </method>
        <method name="updateUsername" returntype="boolean" static="true">
          <description>Update the account's username.</description>
          <parameters>
            <parameter name="$username" type="string" defaultvalue="">
              <description>The new account username.</description>
            </parameter>
          </parameters>
          <returndescription>True on success, false on failure.</returndescription>
          <throws/>
          <deprecated/>
        </method>
        <method name="create" returntype="boolean" static="true">
          <description>Create a new account into the identity system.
(Registration)
This process will create a person and a connected account.</description>
          <parameters>
            <parameter name="$email" type="string" defaultvalue="">
              <description>The person's email.</description>
            </parameter>
            <parameter name="$firstname" type="string" defaultvalue="">
              <description>The person's firstname.</description>
            </parameter>
            <parameter name="$lastname" type="string" defaultvalue="">
              <description>The person's lastname.</description>
            </parameter>
            <parameter name="$password" type="string" defaultvalue="">
              <description>The account password.</description>
            </parameter>
          </parameters>
          <returndescription>True on success, false on failure.</returndescription>
          <throws/>
          <deprecated/>
        </method>
        <method name="getAllAccounts" returntype="array" static="true">
          <description>Get all team accounts.</description>
          <parameters/>
          <returndescription>An array of all team accounts.</returndescription>
          <throws/>
          <deprecated/>
        </method>
        <method name="getAccountByUsername" returntype="array" static="true">
          <description>Get an account (or a list of them) by username.</description>
          <parameters>
            <parameter name="$username" type="string" defaultvalue="">
              <description>The username to search.</description>
            </parameter>
            <parameter name="$includeEmail" type="boolean" defaultvalue="">
              <description>If set to true, search for person emails also.
It is FALSE by default.</description>
            </parameter>
            <parameter name="$fullList" type="boolean" defaultvalue="">
              <description>If true, return a full list (if available) instead of only the first result.
It is FALSE by default.</description>
            </parameter>
          </parameters>
          <returndescription>Array of accounts or account information in array.</returndescription>
          <throws/>
          <deprecated/>
        </method>
      </scope>
      <scope type="protected"/>
      <scope type="private">
        <method name="createSession" returntype="void" static="true">
          <description>Creates a new account session.</description>
          <parameters>
            <parameter name="$accountID" type="integer" defaultvalue="">
              <description>The account id.</description>
            </parameter>
            <parameter name="$salt" type="string" defaultvalue="">
              <description>The logged in generated salt.</description>
            </parameter>
            <parameter name="$personID" type="integer" defaultvalue="">
              <description>The person id (if any).</description>
            </parameter>
            <parameter name="$rememberme" type="boolean" defaultvalue="">
              <description>Whether to remember the user in the database or not.</description>
            </parameter>
          </parameters>
          <returndescription/>
          <throws/>
          <deprecated/>
        </method>
        <method name="getSalt" returntype="string" static="true">
          <description>Gets the stored salt for the current account session.</description>
          <parameters/>
          <returndescription>The stored session salt.</returndescription>
          <throws/>
          <deprecated/>
        </method>
        <method name="updateSessionData" returntype="void" static="true">
          <description>Updates the account's data to the session.</description>
          <parameters/>
          <returndescription/>
          <throws/>
          <deprecated/>
        </method>
        <method name="getAccountValue" returntype="string" static="true">
          <description>Gets an account value from the session. If the session is not set yet, updates from the database.</description>
          <parameters>
            <parameter name="$name" type="string" defaultvalue="">
              <description>The value name.</description>
            </parameter>
          </parameters>
          <returndescription>The account value.</returndescription>
          <throws/>
          <deprecated/>
        </method>
      </scope>
    </methods>
  </class>
</manual>
