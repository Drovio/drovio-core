<?xml version="1.0" encoding="UTF-8"?>
<manual>
  <class name="template" abstract="" namespace="\ebuilder">
    <info>
      <version/>
      <datecreated>1370376016</datecreated>
      <daterevised>1380014551</daterevised>
      <extends/>
      <implements/>
      <throws/>
      <title>template</title>
      <description>Object class for ebuilder template and template group manipulation</description>
      <deprecated/>
    </info>
    <constants/>
    <properties>
      <scope type="public"/>
      <scope type="protected"/>
      <scope type="private">
        <prop type="array" name="status" static="true">
          <description>Mapping template object possible status. Represents a lectical presentation of bmapp_projectStatus codes.</description>
        </prop>
        <prop type="array" name="query" static="true">
          <description>Mapping (string =&amp;gt; code) array of all db queries used by the class.</description>
        </prop>
        <prop type="integer" name="defaultLocale" static="true">
          <description>The default locale code of group and template literals</description>
        </prop>
        <prop type="string" name="namePrefix">
          <description>Current template project object path</description>
        </prop>
        <prop type="" name="folderExt">
          <description/>
        </prop>
        <prop type="integer" name="defaultStatusCode">
          <description>The starting default code of a new template object. Set to 1 means "project mode"</description>
        </prop>
        <prop type="string" name="isDeployed">
          <description>Flag for indicating whatever function are allowed to executed depenting on template status, deployed or else.</description>
        </prop>
        <prop type="string" name="objectId">
          <description>Folder path which points to objects files</description>
        </prop>
        <prop type="integer" name="groupId">
          <description>The current loaded template's grouo id</description>
        </prop>
        <prop type="" name="repositoryPath">
          <description/>
        </prop>
        <prop type="string" name="deployPath">
          <description>Current template deploy object path</description>
        </prop>
        <prop type="integer" name="workingFolder">
          <description>The current loaded template's id</description>
        </prop>
        <prop type="array" name="xmlRoots">
          <description>Mapping array for all xml prime nodes tags used</description>
        </prop>
        <prop type="DOMparser" name="parser">
          <description>Global DOMparser object, loaded with templates setting.xml</description>
        </prop>
        <prop type="array" name="xmlNodes">
          <description>Mapping array for all xml secondary nodes tags used</description>
        </prop>
      </scope>
    </properties>
    <methods>
      <scope type="public">
        <method name="__construct" returntype="void">
          <description>Constructor Method</description>
          <parameters/>
          <returndescription/>
          <throws/>
          <deprecated/>
        </method>
        <method name="load" returntype="bolean">
          <description/>
          <parameters>
            <parameter name="$objectId" type="" defaultvalue="">
              <description/>
            </parameter>
          </parameters>
          <returndescription/>
          <throws/>
          <deprecated/>
        </method>
        <method name="getSettingsXML" returntype="string">
          <description/>
          <parameters/>
          <returndescription/>
          <throws/>
          <deprecated/>
        </method>
        <method name="getAllStructures" returntype="array">
          <description/>
          <parameters/>
          <returndescription/>
          <throws/>
          <deprecated/>
        </method>
        <method name="getStructureXML" returntype="string">
          <description/>
          <parameters>
            <parameter name="$pageStructureName" type="" defaultvalue="">
              <description/>
            </parameter>
            <parameter name="$format" type="" defaultvalue="">
              <description/>
            </parameter>
          </parameters>
          <returndescription/>
          <throws/>
          <deprecated/>
        </method>
        <method name="getStructureCSS" returntype="string">
          <description/>
          <parameters>
            <parameter name="$pageStructureName" type="" defaultvalue="">
              <description/>
            </parameter>
          </parameters>
          <returndescription/>
          <throws/>
          <deprecated/>
        </method>
        <method name="getAllThemes" returntype="array">
          <description/>
          <parameters/>
          <returndescription/>
          <throws/>
          <deprecated/>
        </method>
        <method name="getThemeCSS" returntype="string">
          <description/>
          <parameters>
            <parameter name="$themeName" type="" defaultvalue="">
              <description/>
            </parameter>
          </parameters>
          <returndescription/>
          <throws/>
          <deprecated/>
        </method>
        <method name="getAssetsPath" returntype="string">
          <description/>
          <parameters>
            <parameter name="$rootRelative" type="" defaultvalue="">
              <description/>
            </parameter>
          </parameters>
          <returndescription/>
          <throws/>
          <deprecated/>
        </method>
        <method name="getPageSequence" returntype="array">
          <description/>
          <parameters/>
          <returndescription/>
          <throws/>
          <deprecated/>
        </method>
        <method name="themeThumbs" returntype="array">
          <description/>
          <parameters/>
          <returndescription/>
          <throws/>
          <deprecated/>
        </method>
        <method name="create" returntype="boolean">
          <description>-----------------------------------------------------------------CREATE</description>
          <parameters>
            <parameter name="$templateName" type="" defaultvalue="">
              <description/>
            </parameter>
            <parameter name="$templateDescription" type="" defaultvalue="">
              <description/>
            </parameter>
            <parameter name="$templateType" type="" defaultvalue="">
              <description/>
            </parameter>
            <parameter name="$templateGroup" type="" defaultvalue="">
              <description/>
            </parameter>
          </parameters>
          <returndescription/>
          <throws/>
          <deprecated/>
        </method>
        <method name="createPageStructure" returntype="boolean">
          <description/>
          <parameters>
            <parameter name="$pageStructureName" type="" defaultvalue="">
              <description/>
            </parameter>
            <parameter name="$layoutName" type="" defaultvalue="">
              <description/>
            </parameter>
          </parameters>
          <returndescription/>
          <throws/>
          <deprecated/>
        </method>
        <method name="createTheme" returntype="boolean">
          <description/>
          <parameters>
            <parameter name="$themeName" type="" defaultvalue="">
              <description/>
            </parameter>
          </parameters>
          <returndescription/>
          <throws/>
          <deprecated/>
        </method>
        <method name="addSequencePage" returntype="boolean">
          <description/>
          <parameters>
            <parameter name="$pageStructureName" type="" defaultvalue="">
              <description/>
            </parameter>
            <parameter name="$pageName" type="" defaultvalue="">
              <description/>
            </parameter>
          </parameters>
          <returndescription/>
          <throws/>
          <deprecated/>
        </method>
        <method name="addTemplateLiteral" returntype="boolean">
          <description/>
          <parameters>
            <parameter name="$templateId" type="" defaultvalue="">
              <description/>
            </parameter>
            <parameter name="$locale" type="" defaultvalue="">
              <description/>
            </parameter>
            <parameter name="$name" type="" defaultvalue="">
              <description/>
            </parameter>
            <parameter name="$description" type="" defaultvalue="">
              <description/>
            </parameter>
          </parameters>
          <returndescription/>
          <throws/>
          <deprecated/>
        </method>
        <method name="addGroupLiteral" returntype="boolean">
          <description/>
          <parameters>
            <parameter name="$groupId" type="" defaultvalue="">
              <description/>
            </parameter>
            <parameter name="$locale" type="" defaultvalue="">
              <description/>
            </parameter>
            <parameter name="$name" type="" defaultvalue="">
              <description/>
            </parameter>
            <parameter name="$description" type="" defaultvalue="">
              <description/>
            </parameter>
          </parameters>
          <returndescription/>
          <throws/>
          <deprecated/>
        </method>
        <method name="updateTemplateInfo" returntype="boolean">
          <description>Change the values of template in database</description>
          <parameters/>
          <returndescription/>
          <throws/>
          <deprecated/>
        </method>
        <method name="updateTemplateLiterals" returntype="boolean">
          <description/>
          <parameters>
            <parameter name="$templateName" type="" defaultvalue="">
              <description/>
            </parameter>
            <parameter name="$templateDescription" type="" defaultvalue="">
              <description/>
            </parameter>
          </parameters>
          <returndescription/>
          <throws/>
          <deprecated/>
        </method>
        <method name="savePageStructureXML" returntype="boolean">
          <description/>
          <parameters>
            <parameter name="$pageStructureName" type="" defaultvalue="">
              <description/>
            </parameter>
            <parameter name="$code" type="" defaultvalue="">
              <description/>
            </parameter>
          </parameters>
          <returndescription/>
          <throws/>
          <deprecated/>
        </method>
        <method name="savePageStructureCSS" returntype="boolean">
          <description/>
          <parameters>
            <parameter name="$pageStructureName" type="" defaultvalue="">
              <description/>
            </parameter>
            <parameter name="$code" type="" defaultvalue="">
              <description/>
            </parameter>
          </parameters>
          <returndescription/>
          <throws/>
          <deprecated/>
        </method>
        <method name="saveTheme" returntype="boolean">
          <description/>
          <parameters>
            <parameter name="$themeName" type="" defaultvalue="">
              <description/>
            </parameter>
            <parameter name="$code" type="" defaultvalue="">
              <description/>
            </parameter>
          </parameters>
          <returndescription/>
          <throws/>
          <deprecated/>
        </method>
        <method name="deploy" returntype="boolean">
          <description>----------------------------------------------------------------DEPLOY</description>
          <parameters/>
          <returndescription/>
          <throws/>
          <deprecated/>
        </method>
        <method name="deleteTemplate" returntype="boolean">
          <description>-----------------------------------------------------------------DELETE</description>
          <parameters>
            <parameter name="$deployCheck" type="" defaultvalue="">
              <description/>
            </parameter>
          </parameters>
          <returndescription/>
          <throws/>
          <deprecated/>
        </method>
        <method name="deletePageStructure" returntype="boolean">
          <description/>
          <parameters>
            <parameter name="$pageStructureName" type="" defaultvalue="">
              <description/>
            </parameter>
          </parameters>
          <returndescription/>
          <throws/>
          <deprecated/>
        </method>
        <method name="deleteTheme" returntype="boolean">
          <description/>
          <parameters>
            <parameter name="$themeName" type="" defaultvalue="">
              <description/>
            </parameter>
          </parameters>
          <returndescription/>
          <throws/>
          <deprecated/>
        </method>
        <method name="deleteSequence" returntype="boolean">
          <description/>
          <parameters/>
          <returndescription/>
          <throws/>
          <deprecated/>
        </method>
        <method name="deleteSequencePage" returntype="boolean">
          <description/>
          <parameters>
            <parameter name="$pageName" type="" defaultvalue="">
              <description/>
            </parameter>
          </parameters>
          <returndescription/>
          <throws/>
          <deprecated/>
        </method>
        <method name="getTemplates" returntype="array" static="true">
          <description>-----------------------------------------------------------------GENERAL STATIC</description>
          <parameters>
            <parameter name="$group" type="" defaultvalue="">
              <description/>
            </parameter>
            <parameter name="$status" type="" defaultvalue="">
              <description/>
            </parameter>
          </parameters>
          <returndescription/>
          <throws/>
          <deprecated/>
        </method>
        <method name="getUserTemplates" returntype="array" static="true">
          <description/>
          <parameters>
            <parameter name="$group" type="" defaultvalue="">
              <description/>
            </parameter>
            <parameter name="$status" type="" defaultvalue="">
              <description/>
            </parameter>
          </parameters>
          <returndescription/>
          <throws/>
          <deprecated/>
        </method>
        <method name="getAllTypes" returntype="array" static="true">
          <description/>
          <parameters/>
          <returndescription/>
          <throws/>
          <deprecated/>
        </method>
        <method name="getTemplateInfo" returntype="array" static="true">
          <description/>
          <parameters>
            <parameter name="$id" type="" defaultvalue="">
              <description/>
            </parameter>
          </parameters>
          <returndescription/>
          <throws/>
          <deprecated/>
        </method>
        <method name="getTemplateGroupInfo" returntype="array" static="true">
          <description/>
          <parameters>
            <parameter name="$id" type="" defaultvalue="">
              <description/>
            </parameter>
          </parameters>
          <returndescription/>
          <throws/>
          <deprecated/>
        </method>
        <method name="validate" returntype="boolean">
          <description>validates page structure integrity</description>
          <parameters/>
          <returndescription/>
          <throws/>
          <deprecated/>
        </method>
      </scope>
      <scope type="protected">
        <method name="deleteTemplateDbEntry" returntype="void">
          <description>Deletes the templates database entry</description>
          <parameters/>
          <returndescription/>
          <throws/>
          <deprecated/>
        </method>
        <method name="deleteTemplateLiteral" returntype="void">
          <description>Deletes all template literal database entries for the loaded template if given locale is empty or the db entry for given locale elsewhere</description>
          <parameters>
            <parameter name="$locale" type="string" defaultvalue="">
              <description>Literal locale code</description>
            </parameter>
          </parameters>
          <returndescription/>
          <throws/>
          <deprecated/>
        </method>
      </scope>
      <scope type="private">
        <method name="initSettingsXml" returntype="void">
          <description>Building the settings.xml file at template creation phase</description>
          <parameters/>
          <returndescription/>
          <throws/>
          <deprecated/>
        </method>
        <method name="deleteTemplateFolder" returntype="boolean">
          <description>Deletes the given folder in the template contex, if given folder is empty deletes the entire template folder. Recursive deletetion is optional</description>
          <parameters>
            <parameter name="$folderName" type="string" defaultvalue="">
              <description>The name of folder which goint to be deleted</description>
            </parameter>
            <parameter name="$recursive" type="boolean" defaultvalue="">
              <description>If true, deletes the folder and its contents</description>
            </parameter>
          </parameters>
          <returndescription>Return true on success, false elsewhere</returndescription>
          <throws/>
          <deprecated/>
        </method>
      </scope>
    </methods>
  </class>
</manual>
