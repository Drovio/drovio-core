<?xml version="1.0" encoding="UTF-8"?>
<manual library="UI" package="Modules" namespace="\">
  <class name="MPage" abstract="">
    <info>
      <version>1.1</version>
      <build>2</build>
      <datecreated>1402471391</datecreated>
      <daterevised>1432210075</daterevised>
      <extends>
        <object>\UI\Modules\MContent</object>
      </extends>
      <implements/>
      <throws/>
      <title>Module Page Builder</title>
      <description>This class extends the Module Content manager and builds a module content as page with extra page-specific attributes.</description>
      <deprecated/>
    </info>
    <constants>
      <const type="string" name="MISC_HOLDER">
        <description>The page miscellaneous holder.</description>
      </const>
      <const type="string" name="PAGE_CONTAINER_ID">
        <description>The page container id.</description>
      </const>
    </constants>
    <properties>
      <scope type="public"/>
      <scope type="protected"/>
      <scope type="private">
        <prop type="string" name="title">
          <description>The page title.</description>
        </prop>
        <prop type="DOMElement" name="misc">
          <description>A pool for dropping auxiliary elements.</description>
        </prop>
      </scope>
    </properties>
    <methods>
      <scope type="public">
        <method name="build" returntype="MPage">
          <description>Builds the module page.</description>
          <parameters>
            <parameter name="$title" type="string" defaultvalue="">
              <description>The page title.
It is empty by default.</description>
            </parameter>
            <parameter name="$class" type="string" defaultvalue="">
              <description>The content extra class.
It is empty by default.</description>
            </parameter>
            <parameter name="$loadHTML" type="boolean" defaultvalue="">
              <description>Indicator whether to load html from the designer file.
It is FALSE by default.</description>
            </parameter>
            <parameter name="$fullScreen" type="boolean" defaultvalue="">
              <description>Sets the page content as full screen in order to set top position.
It is FALSE by default.</description>
            </parameter>
          </parameters>
          <returndescription>The module page object.</returndescription>
          <throws/>
          <deprecated/>
        </method>
        <method name="addToolbarNavItem" returntype="DOMElement">
          <description>Inserts a new toolbar navigation item.</description>
          <parameters>
            <parameter name="$id" type="string" defaultvalue="">
              <description>The item's id</description>
            </parameter>
            <parameter name="$title" type="string" defaultvalue="">
              <description>The item's title</description>
            </parameter>
            <parameter name="$class" type="string" defaultvalue="">
              <description>The item's class</description>
            </parameter>
            <parameter name="$collection" type="DOMElement" defaultvalue="">
              <description>The ribbon's collection that will appear at item click.</description>
            </parameter>
            <parameter name="$ribbonType" type="string" defaultvalue="">
              <description>The ribbon type. See RTRibbon for more information.</description>
            </parameter>
            <parameter name="$type" type="string" defaultvalue="">
              <description>The ribbon popup type (if float). See RTRibbon for more information.</description>
            </parameter>
            <parameter name="$ico" type="mixed" defaultvalue="">
              <description>Defines whether this item will have an ico, TRUE or FALSE.
It can be used also as DOMElement to set the ico.</description>
            </parameter>
          </parameters>
          <returndescription>The toolbar item.</returndescription>
          <throws/>
          <deprecated/>
        </method>
        <method name="getRCollection" returntype="DOMElement">
          <description>Builds and returns a ribbon collection from RTRibbon.</description>
          <parameters>
            <parameter name="$id" type="string" defaultvalue="">
              <description>The collection's id.</description>
            </parameter>
            <parameter name="$title" type="string" defaultvalue="">
              <description>The collection's title.</description>
            </parameter>
            <parameter name="$moduleID" type="integer" defaultvalue="">
              <description>The module id for auto loading.</description>
            </parameter>
            <parameter name="$viewName" type="string" defaultvalue="">
              <description>The module'w view name for auto loading.</description>
            </parameter>
            <parameter name="$startup" type="boolean" defaultvalue="">
              <description>Set the collection to load async during startup, on document ready.
False by default.</description>
            </parameter>
            <parameter name="$attr" type="array" defaultvalue="">
              <description>A list of attributes by name to be passed to the collection module.</description>
            </parameter>
          </parameters>
          <returndescription>The ribbon collection element.</returndescription>
          <throws/>
          <deprecated/>
        </method>
        <method name="getRibbonCollection" returntype="DOMElement">
          <description>Builds and returns a ribbon collection from RTRibbon.</description>
          <parameters>
            <parameter name="$id" type="string" defaultvalue="">
              <description>The collection's id.</description>
            </parameter>
            <parameter name="$moduleID" type="integer" defaultvalue="">
              <description>Sets the module id for auto loading.</description>
            </parameter>
            <parameter name="$viewName" type="string" defaultvalue="">
              <description>The module's view name for auto loading.</description>
            </parameter>
            <parameter name="$title" type="string" defaultvalue="">
              <description>The collection's title.</description>
            </parameter>
          </parameters>
          <returndescription>The ribbon collection.</returndescription>
          <throws/>
          <deprecated>Use getRCollection() instead.</deprecated>
        </method>
        <method name="getReport" returntype="mixed">
          <description>Get the ServerReport of this HTML Module Page or the object holder.
It depends on the call.</description>
          <parameters>
            <parameter name="$holder" type="string" defaultvalue="">
              <description>The page holder.
If empty, it gets the page holder.
It is empty by default.</description>
            </parameter>
            <parameter name="$clearToolbar" type="boolean" defaultvalue="">
              <description>If set to TRUE, clears the toolbar from any navigation items.
TRUE by default.</description>
            </parameter>
          </parameters>
          <returndescription>The server report or the object holder.</returndescription>
          <throws/>
          <deprecated/>
        </method>
        <method name="getPageHolder" returntype="string" static="true">
          <description>Gets the RCPage module holder selector.</description>
          <parameters/>
          <returndescription>The RCPage holder</returndescription>
          <throws/>
          <deprecated/>
        </method>
        <method name="appendToMisc" returntype="MPage">
          <description>Appends a DOMElement to the auxiliary pool</description>
          <parameters>
            <parameter name="$element" type="DOMElement" defaultvalue="">
              <description>The element to be appended.</description>
            </parameter>
          </parameters>
          <returndescription>The MPage object.</returndescription>
          <throws/>
          <deprecated/>
        </method>
        <method name="setPageTitle" returntype="void">
          <description>Sets the page title.</description>
          <parameters>
            <parameter name="$title" type="string" defaultvalue="">
              <description>The new page title.</description>
            </parameter>
          </parameters>
          <returndescription/>
          <throws/>
          <deprecated/>
        </method>
        <method name="addMeta" returntype="DOMElement">
          <description>Add a meta description to head.
It will work only for static pages.</description>
          <parameters>
            <parameter name="$name" type="string" defaultvalue="">
              <description>The meta name attribute.</description>
            </parameter>
            <parameter name="$content" type="string" defaultvalue="">
              <description>The meta content attribute.</description>
            </parameter>
            <parameter name="$httpEquiv" type="string" defaultvalue="">
              <description>The meta http-equiv attribute.</description>
            </parameter>
            <parameter name="$charset" type="string" defaultvalue="">
              <description>The meta charset attribute.</description>
            </parameter>
          </parameters>
          <returndescription>The meta element.</returndescription>
          <throws/>
          <deprecated/>
        </method>
        <method name="addOpenGraphMeta" returntype="void">
          <description>Add open graph meta properties to the page.</description>
          <parameters>
            <parameter name="$data" type="array" defaultvalue="">
              <description>An array of property =&amp;gt; content open graph meta.
The og: at the property name is inserted automatically.</description>
            </parameter>
          </parameters>
          <returndescription/>
          <throws/>
          <deprecated/>
        </method>
      </scope>
      <scope type="protected">
        <method name="getParentFilename" returntype="string">
          <description>Gets the parent's filename for loading the html from external file.</description>
          <parameters/>
          <returndescription>The parent script name.</returndescription>
          <throws/>
          <deprecated/>
        </method>
      </scope>
      <scope type="private"/>
    </methods>
  </class>
</manual>
