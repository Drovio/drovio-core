<?xml version="1.0" encoding="UTF-8"?>
<manual library="ESS" package="Protocol" namespace="\environment">
  <class name="Url" abstract="">
    <info>
      <version>0.1</version>
      <build>1</build>
      <datecreated>1406651907</datecreated>
      <daterevised>1406651907</daterevised>
      <extends/>
      <implements/>
      <throws/>
      <title>URL Resolver</title>
      <description>This class is responsible for url resolving.
It is used for resolving urls for resources and redirections.</description>
      <deprecated/>
    </info>
    <constants/>
    <properties>
      <scope type="public"/>
      <scope type="protected"/>
      <scope type="private"/>
    </properties>
    <methods>
      <scope type="public">
        <method name="resolve" returntype="string" static="true">
          <description>Resolves a given URL given a subdomain and a page url.</description>
          <parameters>
            <parameter name="$sub" type="string" defaultvalue="">
              <description>The subdomain name.
It must be a valid name.</description>
            </parameter>
            <parameter name="$url" type="string" defaultvalue="">
              <description>The page url.
By default it's the root url ("/").</description>
            </parameter>
          </parameters>
          <returndescription>The resolved url.</returndescription>
          <throws/>
          <deprecated/>
        </method>
        <method name="resource" returntype="string" static="true">
          <description>Resolves a resource's URL for reference to the resource's domain.</description>
          <parameters>
            <parameter name="$url" type="string" defaultvalue="">
              <description>The resource's URL to be resolved.</description>
            </parameter>
          </parameters>
          <returndescription>The resolved resource url.</returndescription>
          <throws/>
          <deprecated/>
        </method>
        <method name="checkSubdomain" returntype="boolean" static="true">
          <description>Checks if the user is in the desired subdomain with the right way.
The user is redirected in the right subdomain with the right url.</description>
          <parameters>
            <parameter name="$sub" type="string" defaultvalue="">
              <description>The subdomain to check for.</description>
            </parameter>
            <parameter name="$subPath" type="string" defaultvalue="">
              <description>The inner subdomain path to check for.</description>
            </parameter>
          </parameters>
          <returndescription>True if subdomain is ok, false otherwise.</returndescription>
          <throws/>
          <deprecated/>
        </method>
        <method name="getDomain" returntype="string" static="true">
          <description>Get current domain.</description>
          <parameters/>
          <returndescription>The host domain.</returndescription>
          <throws/>
          <deprecated/>
        </method>
        <method name="getSubDomain" returntype="string" static="true">
          <description>Gets the current navigation subdomain.</description>
          <parameters/>
          <returndescription>Returns the active navigation subdomain.</returndescription>
          <throws/>
          <deprecated/>
        </method>
        <method name="redirect" returntype="string" static="true">
          <description>Resolves the given url and returns a redirect url after check that the url is valid.</description>
          <parameters>
            <parameter name="$url" type="string" defaultvalue="">
              <description>The url to redirect.</description>
            </parameter>
          </parameters>
          <returndescription>The redirected url.</returndescription>
          <throws/>
          <deprecated/>
        </method>
        <method name="get" returntype="string" static="true">
          <description>Creates and returns a url with parameters in url encoding.</description>
          <parameters>
            <parameter name="$url" type="string" defaultvalue="">
              <description>The base url.</description>
            </parameter>
            <parameter name="$params" type="array" defaultvalue="">
              <description>An array of parameters as key =&amp;gt; value.</description>
            </parameter>
          </parameters>
          <returndescription>A well formed url.</returndescription>
          <throws/>
          <deprecated/>
        </method>
      </scope>
      <scope type="protected"/>
      <scope type="private">
        <method name="urlInfo" returntype="array" static="true">
          <description>Gets the info of the url in an array.</description>
          <parameters/>
          <returndescription>The url info as follows:
['sub'] = The navigation subdomain.
['domain'] = The host domain.</returndescription>
          <throws/>
          <deprecated/>
        </method>
      </scope>
    </methods>
  </class>
</manual>
