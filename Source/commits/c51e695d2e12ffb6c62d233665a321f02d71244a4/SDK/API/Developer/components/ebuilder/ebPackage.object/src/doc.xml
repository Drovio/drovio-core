<?xml version="1.0" encoding="UTF-8"?>
<manual>
  <class name="ebPackage" abstract="" namespace="\components\ebuilder">
    <info>
      <version/>
      <datecreated>1369742586</datecreated>
      <daterevised>1374589489</daterevised>
      <extends>\API\Developer\components\prime\packageObject</extends>
      <implements/>
      <throws/>
      <title>Ebuilder Package Manager</title>
      <description>Handles all operations with eBuilder packages.</description>
      <deprecated/>
    </info>
    <constants/>
    <properties>
      <scope type="public"/>
      <scope type="protected"/>
      <scope type="private"/>
    </properties>
    <methods>
      <scope type="public">
        <method name="__construct" returntype="void">
          <description>Create a new package.</description>
          <parameters/>
          <deprecated/>
          <returndescription/>
          <throws/>
        </method>
        <method name="load" returntype="void">
          <description>Loads all objects in the given package.</description>
          <parameters>
            <parameter name="$libName" type="string" defaultvalue="">
              <description>The library name.</description>
            </parameter>
            <parameter name="$packageName" type="string" defaultvalue="">
              <description>The package name.</description>
            </parameter>
          </parameters>
          <deprecated/>
          <returndescription/>
          <throws/>
        </method>
        <method name="loadCSS" returntype="void">
          <description>Loads a style package.</description>
          <parameters>
            <parameter name="$libName" type="string" defaultvalue="">
              <description>The library name.</description>
            </parameter>
            <parameter name="$packageName" type="string" defaultvalue="">
              <description>The package name.</description>
            </parameter>
          </parameters>
          <deprecated/>
          <returndescription/>
          <throws/>
        </method>
        <method name="loadJS" returntype="void">
          <description>Loads a javascript package.</description>
          <parameters>
            <parameter name="$libName" type="string" defaultvalue="">
              <description>The library name.</description>
            </parameter>
            <parameter name="$packageName" type="string" defaultvalue="">
              <description>The package name.</description>
            </parameter>
          </parameters>
          <deprecated/>
          <returndescription/>
          <throws/>
        </method>
        <method name="setTesterPackages" returntype="void" static="true">
          <description>Activates or deactivates the tester status for the given eBuilder packages.</description>
          <parameters>
            <parameter name="$pkgList" type="array" defaultvalue="">
              <description>The array of packages as [libName][] {package1, package2, etc.}.</description>
            </parameter>
          </parameters>
          <deprecated/>
          <returndescription/>
          <throws/>
        </method>
        <method name="getTesterStatus" returntype="boolean" static="true">
          <description>Get the current tester status for the given eBuilder package.</description>
          <parameters>
            <parameter name="$libName" type="string" defaultvalue="">
              <description>The library name.</description>
            </parameter>
            <parameter name="$packageName" type="string" defaultvalue="">
              <description>The package name.</description>
            </parameter>
          </parameters>
          <deprecated/>
          <returndescription/>
          <throws/>
        </method>
        <method name="export" returntype="void">
          <description>Exports an entire package (including source code, css and javascript) to latest.
Performs an inner release.</description>
          <parameters>
            <parameter name="$libName" type="string" defaultvalue="">
              <description>The library name.</description>
            </parameter>
            <parameter name="$packageName" type="string" defaultvalue="">
              <description>The package name.</description>
            </parameter>
          </parameters>
          <deprecated/>
          <returndescription/>
          <throws/>
        </method>
        <method name="pack" returntype="boolean">
          <description>Pack an entire package in an archive, new or existing.</description>
          <parameters>
            <parameter name="$libName" type="string" defaultvalue="">
              <description>Name of the library</description>
            </parameter>
            <parameter name="$packageName" type="string" defaultvalue="">
              <description>Name of the package to pack.</description>
            </parameter>
            <parameter name="$archivePath" type="string" defaultvalue="">
              <description>Directory of the new or existing archive</description>
            </parameter>
            <parameter name="$archiveName" type="string" defaultvalue="">
              <description>Name of the archive to pack into. If empty, a new archive will be created in $destination.</description>
            </parameter>
            <parameter name="$innerArchiveDirectory" type="string" defaultvalue="">
              <description>Inner directory inside the existing archive. Ignored if no archive is provided.</description>
            </parameter>
          </parameters>
          <returndescription>Status of the process</returndescription>
          <throws/>
          <deprecated/>
        </method>
      </scope>
      <scope type="protected"/>
      <scope type="private">
        <method name="loadLibrary" returntype="void">
          <description>Load all packages of a given library.</description>
          <parameters>
            <parameter name="$libName" type="string" defaultvalue="">
              <description>The library name.</description>
            </parameter>
          </parameters>
          <deprecated/>
          <returndescription/>
          <throws/>
        </method>
      </scope>
    </methods>
  </class>
</manual>
