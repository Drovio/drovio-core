<?xml version="1.0" encoding="UTF-8"?>
<manual>
  <class name="classDocumentor" abstract="" namespace="\documentation">
    <info>
      <version/>
      <datecreated>1372323880</datecreated>
      <daterevised>1381308142</daterevised>
      <extends/>
      <implements/>
      <throws/>
      <title>Class Documentor</title>
      <description>Handles the documentation process of the classes.</description>
      <deprecated/>
    </info>
    <constants/>
    <properties>
      <scope type="public"/>
      <scope type="protected"/>
      <scope type="private">
        <prop type="DOMElement" name="linkedEditor">
          <description>The editor with the code that needs to be documented</description>
        </prop>
        <prop type="" name="classDocumentor">
          <description/>
        </prop>
      </scope>
    </properties>
    <methods>
      <scope type="public">
        <method name="__construct" returntype="void">
          <description>Creates and initializes a classDocumentor object.</description>
          <parameters>
            <parameter name="$editor" type="DOMElement" defaultvalue="">
              <description>The associated editor which contents need to be documented</description>
            </parameter>
          </parameters>
          <returndescription/>
          <throws/>
          <deprecated/>
        </method>
        <method name="build" returntype="classDocumentor">
          <description>Builds and returns a classDocumentor object</description>
          <parameters>
            <parameter name="$manual" type="string" defaultvalue="">
              <description>Existing manual for the editor's code</description>
            </parameter>
            <parameter name="$name" type="string" defaultvalue="">
              <description>Name of the documenting area</description>
            </parameter>
          </parameters>
          <returndescription>The built object [this]</returndescription>
          <throws/>
          <deprecated/>
        </method>
        <method name="isValidDocumentation" returntype="boolean" static="true">
          <description>Checks if the manual's structure is correct</description>
          <parameters>
            <parameter name="$manual" type="string" defaultvalue="">
              <description>The manual to check</description>
            </parameter>
          </parameters>
          <returndescription>The validation state of the documentation</returndescription>
          <throws/>
          <deprecated>Use  API\Devaloper\resources\documentation\classDocumentor::isValidDocumentation</deprecated>
        </method>
        <method name="getClassDetails" returntype="array" static="true">
          <description>Returns class details in an array</description>
          <parameters>
            <parameter name="$manual" type="string" defaultvalue="">
              <description>Object's documentation in xml format</description>
            </parameter>
          </parameters>
          <returndescription>Class details:
name -&amp;gt; (string) Class name,
abstract -&amp;gt; (boolean) Class is/isn't abstract,
namespace -&amp;gt; (string) Class namespace,
version -&amp;gt; Class version,
datecreated -&amp;gt; Class creation timestamp,
daterevised -&amp;gt; Class last revision timestamp,
title -&amp;gt; Class title,
description -&amp;gt; Class description,
deprecated -&amp;gt; (mixed) Class deprication description or FALSE,
extends -&amp;gt; array of extended object names,
implements -&amp;gt; array of implemented object names.</returndescription>
          <throws/>
          <deprecated>Use  API\Devaloper\resources\documentation\classDocumentor::getClassDetails</deprecated>
        </method>
        <method name="stripSourceCode" returntype="string" static="true">
          <description>Strips specific comments from the code</description>
          <parameters>
            <parameter name="$sourceCode" type="string" defaultvalue="">
              <description>The code from which to strip comments</description>
            </parameter>
          </parameters>
          <returndescription>The stripped source code</returndescription>
          <throws/>
          <deprecated>Use  API\Devaloper\resources\documentation\classDocComments::stripSourceCode</deprecated>
        </method>
        <method name="pretifySourceCode" returntype="string" static="true">
          <description>Position comment blocks in specific spots in the given code</description>
          <parameters>
            <parameter name="$sourceCode" type="string" defaultvalue="">
              <description>The code to comment.</description>
            </parameter>
            <parameter name="$manual" type="string" defaultvalue="">
              <description>The code's manual from which the comment blocks will be created.</description>
            </parameter>
            <parameter name="$library" type="string" defaultvalue="">
              <description>Code class' library</description>
            </parameter>
            <parameter name="$package" type="string" defaultvalue="">
              <description>Code class' package</description>
            </parameter>
            <parameter name="$namespace" type="string" defaultvalue="">
              <description>Code class' namespace</description>
            </parameter>
          </parameters>
          <returndescription>The pretified source code</returndescription>
          <throws/>
          <deprecated>Use  API\Devaloper\resources\documentation\classDocComments::pretifySourceCode</deprecated>
        </method>
        <method name="loadDoc" returntype="string" static="true">
          <description>Acquires the documentation model of an object as an xml document string.</description>
          <parameters>
            <parameter name="$libName" type="string" defaultvalue="">
              <description>Name of the object's library</description>
            </parameter>
            <parameter name="$packageName" type="string" defaultvalue="">
              <description>Name of the object's package</description>
            </parameter>
            <parameter name="$nsName" type="string" defaultvalue="">
              <description>Name of the object's namespace</description>
            </parameter>
            <parameter name="$objectName" type="string" defaultvalue="">
              <description>Name of the object</description>
            </parameter>
          </parameters>
          <returndescription>The document's xml string</returndescription>
          <throws/>
          <deprecated>Use  API\Devaloper\resources\documentation\classDocumentor:</deprecated>
        </method>
        <method name="getModel" returntype="string" static="true">
          <description>Returns the documentation model's xml.</description>
          <parameters/>
          <returndescription>The model's xml string</returndescription>
          <throws/>
          <deprecated>Use  API\Devaloper\resources\documentation\classDocumentor::getModel</deprecated>
        </method>
      </scope>
      <scope type="protected"/>
      <scope type="private">
        <method name="getDescriptionLine" returntype="string">
          <description>Creates and returns a line for a comment block</description>
          <parameters>
            <parameter name="$values" type="mixed" defaultvalue="">
              <description>Values to present in the line</description>
            </parameter>
            <parameter name="$tag" type="string" defaultvalue="">
              <description>Tag name of the line</description>
            </parameter>
            <parameter name="$tabs" type="integer" defaultvalue="">
              <description>Number of tabs between tag and values</description>
            </parameter>
          </parameters>
          <returndescription>The created line</returndescription>
          <throws/>
          <deprecated>Not In use, See API\Devaloper\resources\documentation\classDocComments for more info</deprecated>
        </method>
        <method name="getClassStampComments" returntype="string">
          <description>Creates and returns a comment block that holds the objects generic info, such as library, namespace, etc</description>
          <parameters>
            <parameter name="$library" type="string" defaultvalue="">
              <description>This value is presented as the object's library</description>
            </parameter>
            <parameter name="$package" type="string" defaultvalue="">
              <description>This value is presented as the object's package</description>
            </parameter>
            <parameter name="$namespace" type="string" defaultvalue="">
              <description>This value is presented as the object's namespace</description>
            </parameter>
          </parameters>
          <returndescription>The comment block</returndescription>
          <throws/>
          <deprecated/>
        </method>
        <method name="getClassInfoComments" returntype="string">
          <description>Creates and returns a comment block that holds the objects class info, such as description, version, etc</description>
          <parameters>
            <parameter name="$title" type="string" defaultvalue="">
              <description>This value is presented as the object's title</description>
            </parameter>
            <parameter name="$description" type="string" defaultvalue="">
              <description>This value is presented as the object's description</description>
            </parameter>
            <parameter name="$version" type="string" defaultvalue="">
              <description>This value is presented as the object's version</description>
            </parameter>
            <parameter name="$created" type="mixed" defaultvalue="">
              <description>This value is presented as the object's creation date. Should be an integer or string timestamp</description>
            </parameter>
            <parameter name="$revised" type="mixed" defaultvalue="">
              <description>This value is presented as the object's last modification date. Should be an integer or string unformated timestamp</description>
            </parameter>
            <parameter name="$throws" type="string" defaultvalue="">
              <description>The exceptions thrown in the class. Should be a comma separated string.</description>
            </parameter>
            <parameter name="$deprecated" type="string" defaultvalue="">
              <description>This value is presented as the object's deprecation description.</description>
            </parameter>
          </parameters>
          <returndescription>The comment block</returndescription>
          <throws/>
          <deprecated>Not In use, See API\Devaloper\resources\documentation\classDocComments for more info</deprecated>
        </method>
        <method name="getPropertyComments" returntype="string">
          <description>Creates and returns a comment block that holds a class' property info, namely description and type.</description>
          <parameters>
            <parameter name="$description" type="string" defaultvalue="">
              <description>This value is presented as the property's description.</description>
            </parameter>
            <parameter name="$type" type="string" defaultvalue="">
              <description>This value is presented as the property's type.</description>
            </parameter>
          </parameters>
          <returndescription>The comment block</returndescription>
          <throws/>
          <deprecated>Not In use, See API\Devaloper\resources\documentation\classDocComments for more info</deprecated>
        </method>
        <method name="getMethodComments" returntype="string">
          <description>Creates and returns a comment block that holds an objects method info, such as description, return value, etc</description>
          <parameters>
            <parameter name="$description" type="string" defaultvalue="">
              <description>This value is presented as the method's description.</description>
            </parameter>
            <parameter name="$args" type="array" defaultvalue="">
              <description>Holds the method parameters' info. Should have the following keys: 'type', 'name', 'description'.</description>
            </parameter>
            <parameter name="$return" type="string" defaultvalue="">
              <description>This value is presented as the method's return type.</description>
            </parameter>
            <parameter name="$returnDesc" type="string" defaultvalue="">
              <description>The description of the returning value, if not void</description>
            </parameter>
            <parameter name="$throws" type="string" defaultvalue="">
              <description>The exceptions thrown by the method. Should be a comma separated string</description>
            </parameter>
            <parameter name="$deprecated" type="string" defaultvalue="">
              <description>This value is presented as the method's deprecation description.</description>
            </parameter>
          </parameters>
          <returndescription>The comment block</returndescription>
          <throws/>
          <deprecated>Not In use, See API\Devaloper\resources\documentation\classDocComments for more info</deprecated>
        </method>
      </scope>
    </methods>
  </class>
</manual>
