<?xml version="1.0" encoding="UTF-8"?>
<manual library="AEL" package="Platform" namespace="\">
  <class name="classLoader" abstract="" namespace="">
    <info>
      <version/>
      <datecreated>1389290921</datecreated>
      <daterevised>1397141866</daterevised>
      <extends/>
      <implements/>
      <throws/>
      <title>Application Engine Class Loader</title>
      <description>Manager for importing all classes from the Core SDK and the application's source.</description>
      <deprecated/>
    </info>
    <constants/>
    <properties>
      <scope type="public"/>
      <scope type="protected"/>
      <scope type="private">
        <prop type="integer" name="appID" static="true">
          <description>The application id that is currently running.</description>
        </prop>
        <prop type="boolean" name="tester" static="true">
          <description>Indicator for application tester.</description>
        </prop>
        <prop type="array" name="allowedObjects" static="true">
          <description>The allowed core object list.</description>
        </prop>
      </scope>
    </properties>
    <methods>
      <scope type="public">
        <method name="initApp" returntype="void" static="true">
          <description>Initializes the application id for importing the source code.</description>
          <parameters>
            <parameter name="$appID" type="integer" defaultvalue="">
              <description>The application id.</description>
            </parameter>
          </parameters>
          <returndescription/>
          <throws/>
          <deprecated/>
        </method>
        <method name="setTester" returntype="void" static="true">
          <description>Sets the testerMode on or off for the application running right now in the classLoader.</description>
          <parameters>
            <parameter name="$tester" type="boolean" defaultvalue="">
              <description>The application testerMode.</description>
            </parameter>
          </parameters>
          <returndescription/>
          <throws/>
          <deprecated/>
        </method>
        <method name="import" returntype="void" static="true">
          <description>Imports a source object from the application.</description>
          <parameters>
            <parameter name="$library" type="string" defaultvalue="">
              <description>The library name.</description>
            </parameter>
            <parameter name="$package" type="string" defaultvalue="">
              <description>The package name.</description>
            </parameter>
            <parameter name="$object" type="string" defaultvalue="">
              <description>The object name.
It is separated with "::" from the namespace.
ex. platform::importer.</description>
            </parameter>
          </parameters>
          <returndescription/>
          <throws/>
          <deprecated/>
        </method>
        <method name="importCore" returntype="void" static="true">
          <description>Import a class object from the Redback Core SDK (including the AEL objects).</description>
          <parameters>
            <parameter name="$library" type="string" defaultvalue="">
              <description>The library name.</description>
            </parameter>
            <parameter name="$package" type="string" defaultvalue="">
              <description>The package name.</description>
            </parameter>
            <parameter name="$object" type="string" defaultvalue="">
              <description>The object name.
The same as the import() function.</description>
            </parameter>
          </parameters>
          <returndescription/>
          <throws/>
          <deprecated/>
        </method>
      </scope>
      <scope type="protected"/>
      <scope type="private">
        <method name="validate" returntype="boolean">
          <description>Validates if the given object is allowed to be included in the application.</description>
          <parameters>
            <parameter name="$library" type="string" defaultvalue="">
              <description>The library name.</description>
            </parameter>
            <parameter name="$package" type="string" defaultvalue="">
              <description>The package name.</description>
            </parameter>
            <parameter name="$object" type="string" defaultvalue="">
              <description>The object name.
The same as the import() function.</description>
            </parameter>
          </parameters>
          <returndescription>True is object is allowed, false otherwise.</returndescription>
          <throws/>
          <deprecated/>
        </method>
        <method name="loadXMLList" returntype="void" static="true">
          <description>Loads the allowed redback core sdk objects.</description>
          <parameters/>
          <returndescription/>
          <throws/>
          <deprecated/>
        </method>
      </scope>
    </methods>
  </class>
</manual>
