<?xml version="1.0" encoding="UTF-8"?>
<manual library="ESS" package="Protocol" namespace="\reports">
  <class name="JSONServerReport" abstract="">
    <info>
      <version>2.0</version>
      <build>1</build>
      <datecreated>1406662821</datecreated>
      <daterevised>1447783063</daterevised>
      <extends>
        <object>\ESS\Protocol\reports\ServerReport</object>
      </extends>
      <implements/>
      <throws/>
      <title>JSON Server Report</title>
      <description>Creates an asynchronous server report in JSON format according to user request.</description>
      <deprecated/>
    </info>
    <constants>
      <const type="string" name="CONTENT_DATA">
        <description>DEPRECATED. The content "data" type.</description>
      </const>
      <const type="string" name="CONTENT_JSON">
        <description>The content "json" type.</description>
      </const>
      <const type="string" name="CONTENT_HTML">
        <description>The content "html" type.</description>
      </const>
      <const type="string" name="CONTENT_XML">
        <description>The content "xml" type.</description>
      </const>
      <const type="string" name="CONTENT_ACTION">
        <description>The content "action" type.</description>
      </const>
    </constants>
    <properties>
      <scope type="public"/>
      <scope type="protected"/>
      <scope type="private"/>
    </properties>
    <methods>
      <scope type="public">
        <method name="get" returntype="string" static="true">
          <description>Get the json server report.</description>
          <parameters>
            <parameter name="$allowOrigin" type="string" defaultvalue="">
              <description>The allow origin header value for the ServerReport response headers.
If empty, calculate the inner allow origin of the framework (more secure).
It is empty by default.</description>
            </parameter>
            <parameter name="$withCredentials" type="boolean" defaultvalue="">
              <description>The allow credentials header value for the ServerReport response headers.
It is TRUE by default.</description>
            </parameter>
          </parameters>
          <returndescription>The server report in json format.</returndescription>
          <throws/>
          <deprecated/>
        </method>
        <method name="addContent" returntype="void" static="true">
          <description>Adds a content report to the report stack.</description>
          <parameters>
            <parameter name="$content" type="array" defaultvalue="">
              <description>The body of the report content.</description>
            </parameter>
            <parameter name="$key" type="string" defaultvalue="">
              <description>The content key value.
If set, the content will be available at the given key, otherwise it will inserted in the array with a numeric key (next array key).</description>
            </parameter>
            <parameter name="$type" type="string" defaultvalue="">
              <description>The content's type.
See class constants.
It is CONTENT_JSON by default.</description>
            </parameter>
          </parameters>
          <returndescription/>
          <throws/>
          <deprecated/>
        </method>
        <method name="addAction" returntype="void" static="true">
          <description>Adds an action report to the report stack.</description>
          <parameters>
            <parameter name="$type" type="string" defaultvalue="">
              <description>The action type.
This may vary according to the handler.</description>
            </parameter>
            <parameter name="$value" type="string" defaultvalue="">
              <description>The action value.
It is empty by default.</description>
            </parameter>
            <parameter name="$key" type="string" defaultvalue="">
              <description>The action key value.
If set, the action will be available at the given key, otherwise it will inserted in the array with a numeric key (next array key).</description>
            </parameter>
          </parameters>
          <returndescription/>
          <throws/>
          <deprecated/>
        </method>
        <method name="parseReportContent" returntype="void" static="true">
          <description>Parse a server report content as generated with a ServerReport class.</description>
          <parameters>
            <parameter name="$report" type="string" defaultvalue="">
              <description>The report content.</description>
            </parameter>
            <parameter name="$actions" type="array" defaultvalue="">
              <description>The array where all the actions will be appended to be returned to the caller, by action key.
It is a call by reference.
It is empty array by default.</description>
            </parameter>
            <parameter name="$contents" type="array" defaultvalue="">
              <description>The array where all the content will be appended to be returned to the caller, by content type and key.
It is a call by reference.
It is empty array by default.</description>
            </parameter>
            <parameter name="$headers" type="array" defaultvalue="">
              <description>The array where all the head will be appended to be returned to the caller, by head key name.
It is a call by reference.
It is empty array by default.</description>
            </parameter>
          </parameters>
          <returndescription/>
          <throws/>
          <deprecated/>
        </method>
      </scope>
      <scope type="protected">
        <method name="getReport" returntype="string" static="true">
          <description>Builds the entire report with the head and the body and returns the json string generated.</description>
          <parameters/>
          <returndescription>The json report generated.</returndescription>
          <throws/>
          <deprecated/>
        </method>
        <method name="getReportContent" returntype="array" static="true">
          <description>Creates a report content as an array inside the report.</description>
          <parameters>
            <parameter name="$type" type="string" defaultvalue="">
              <description>The report type.
See class constants.
It is CONTENT_JSON by default.</description>
            </parameter>
            <parameter name="$payload" type="mixed" defaultvalue="">
              <description>The report payload.
It is NULL by default.</description>
            </parameter>
          </parameters>
          <returndescription>The report content array.</returndescription>
          <throws/>
          <deprecated/>
        </method>
        <method name="getActionContext" returntype="array" static="true">
          <description>Builds a JSON action report.</description>
          <parameters>
            <parameter name="$type" type="string" defaultvalue="">
              <description>The action type.
This may vary according to the handler.</description>
            </parameter>
            <parameter name="$value" type="string" defaultvalue="">
              <description>The action value.</description>
            </parameter>
          </parameters>
          <returndescription>The action array context.</returndescription>
          <throws/>
          <deprecated/>
        </method>
      </scope>
      <scope type="private"/>
    </methods>
  </class>
</manual>
