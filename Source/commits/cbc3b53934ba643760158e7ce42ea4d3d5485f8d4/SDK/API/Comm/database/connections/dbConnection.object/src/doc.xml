<?xml version="1.0" encoding="UTF-8"?>
<manual library="API" package="Comm" namespace="\database\connections">
  <class name="dbConnection" abstract="" namespace="">
    <info>
      <version/>
      <datecreated>1366713060</datecreated>
      <daterevised>1387187426</daterevised>
      <extends/>
      <implements/>
      <throws/>
      <title>Database Connection</title>
      <description>Connects to any database with the proper database connector.</description>
      <deprecated/>
    </info>
    <constants/>
    <properties>
      <scope type="public"/>
      <scope type="protected">
        <prop type="iDbConnector" name="dbConnector">
          <description>Database connector</description>
        </prop>
        <prop type="string" name="dbType">
          <description>Database engine</description>
        </prop>
        <prop type="string" name="host">
          <description>The database URL host</description>
        </prop>
        <prop type="string" name="database">
          <description>The database name</description>
        </prop>
      </scope>
      <scope type="private">
        <prop type="string" name="username">
          <description>Database username</description>
        </prop>
        <prop type="string" name="password" class="undefined">
          <description>Database password</description>
        </prop>
      </scope>
    </properties>
    <methods>
      <scope type="public">
        <method name="options" returntype="void">
          <description>Set connection options</description>
          <parameters>
            <parameter name="$dbType" type="string" defaultvalue="">
              <description>The database engine type</description>
            </parameter>
            <parameter name="$host" type="string" defaultvalue="">
              <description>The database host URL</description>
            </parameter>
            <parameter name="$database" type="string" defaultvalue="">
              <description>The database name</description>
            </parameter>
            <parameter name="$username" type="string" defaultvalue="">
              <description>The user's username</description>
            </parameter>
            <parameter name="$password" type="string" defaultvalue="">
              <description>The user's password</description>
            </parameter>
          </parameters>
          <deprecated/>
          <returndescription/>
          <throws/>
        </method>
        <method name="execute" returntype="mixed">
          <description>Executes a query to the database. It supports multiple queries separated with ";".</description>
          <parameters>
            <parameter name="$query" type="string" defaultvalue="">
              <description>The query to be executed. It supports many queries separated by ";".</description>
            </parameter>
          </parameters>
          <deprecated/>
          <returndescription>Returns FALSE on failure.
For successful SELECT, SHOW, DESCRIBE or EXPLAIN queries mysqli_query() will return a mysqli_result object.
For other successful queries mysqli_query() will return TRUE.</returndescription>
          <throws>
            <exception>Exception</exception>
          </throws>
        </method>
        <method name="escape" returntype="string">
          <description>Clears a string given and returns the cleared one.</description>
          <parameters>
            <parameter name="$resource" type="string" defaultvalue="">
              <description>The string to be cleared.</description>
            </parameter>
          </parameters>
          <returndescription>The cleared string.</returndescription>
          <throws/>
          <deprecated/>
        </method>
        <method name="fetch" returntype="array">
          <description>Fetch results from resource.</description>
          <parameters>
            <parameter name="$resource" type="resource" defaultvalue="">
              <description>The database results resource.</description>
            </parameter>
            <parameter name="$all" type="boolean" defaultvalue="">
              <description>Whether it will fetch the entire resource into one array.</description>
            </parameter>
          </parameters>
          <deprecated/>
          <returndescription>An array of results.</returndescription>
          <throws/>
        </method>
        <method name="toArray" returntype="array">
          <description>Transform a resource to an array with the specified key value assignment</description>
          <parameters>
            <parameter name="$resource" type="resource" defaultvalue="">
              <description>The resource to parse.</description>
            </parameter>
            <parameter name="$key" type="string" defaultvalue="">
              <description>The field of the table that will act as key.</description>
            </parameter>
            <parameter name="$value" type="string" defaultvalue="">
              <description>The field of the table that will act as value</description>
            </parameter>
          </parameters>
          <returndescription>The associative array.</returndescription>
          <throws/>
          <deprecated/>
        </method>
        <method name="seek" returntype="mixed">
          <description>Sets the iterator of the resource to a given position</description>
          <parameters>
            <parameter name="$resource" type="resource" defaultvalue="">
              <description>The resource given</description>
            </parameter>
            <parameter name="$row" type="integer" defaultvalue="">
              <description>The position where the iterator will be placed</description>
            </parameter>
          </parameters>
          <deprecated/>
          <returndescription/>
          <throws/>
        </method>
        <method name="get_num_rows" returntype="number">
          <description>Returns the count of rows of the given resource</description>
          <parameters>
            <parameter name="$resource" type="resource" defaultvalue="">
              <description>The given resource</description>
            </parameter>
          </parameters>
          <deprecated/>
          <returndescription/>
          <throws/>
        </method>
        <method name="execute_query" returntype="mixed">
          <description>Execute a given query to the database</description>
          <parameters>
            <parameter name="$dbQuery" type="dbQuery" defaultvalue="">
              <description>The dbQuery to be executed</description>
            </parameter>
            <parameter name="$attr" type="array" defaultvalue="">
              <description>A set of attributes to be passed to the query</description>
            </parameter>
          </parameters>
          <deprecated>Use execute() instead.</deprecated>
          <returndescription/>
          <throws/>
        </method>
        <method name="execute_transaction" returntype="mixed">
          <description>Executes a general query transaction</description>
          <parameters>
            <parameter name="$dbQueries" type="array" defaultvalue="">
              <description>The list of queries to be executed as a transaction</description>
            </parameter>
            <parameter name="$attr" type="" defaultvalue="">
              <description/>
            </parameter>
          </parameters>
          <deprecated>Use execute() instead.</deprecated>
          <returndescription/>
          <throws/>
        </method>
        <method name="to_array" returntype="array">
          <description>Transform a resource to an array with the specified key value assignment</description>
          <parameters>
            <parameter name="$resource" type="resource" defaultvalue="">
              <description>The resource to be transformed</description>
            </parameter>
            <parameter name="$key" type="string" defaultvalue="">
              <description>The field of the table that will act as key</description>
            </parameter>
            <parameter name="$value" type="string" defaultvalue="">
              <description>The field of the table that will act as value</description>
            </parameter>
          </parameters>
          <deprecated>Use toArray() instead.</deprecated>
          <returndescription/>
          <throws/>
        </method>
        <method name="toFullArray" returntype="array">
          <description>Transform a resource to a full array</description>
          <parameters>
            <parameter name="$resource" type="resource" defaultvalue="">
              <description>The resource to be transformed</description>
            </parameter>
          </parameters>
          <deprecated>Use fetch(resource, TRUE) instead.</deprecated>
          <returndescription/>
          <throws/>
        </method>
      </scope>
      <scope type="protected"/>
      <scope type="private"/>
    </methods>
  </class>
</manual>
