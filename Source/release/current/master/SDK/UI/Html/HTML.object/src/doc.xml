<?xml version="1.0" encoding="UTF-8"?>
<manual library="UI" package="Html" namespace="\">
  <class name="HTML" abstract="">
    <info>
      <version>3.0</version>
      <build>2</build>
      <datecreated>1387462494</datecreated>
      <daterevised>1445958223</daterevised>
      <extends>
        <object>\UI\Html\DOM</object>
      </extends>
      <implements/>
      <throws/>
      <title>HTML Handler</title>
      <description>HTML extends DOM handler for html specific functions.</description>
      <deprecated/>
    </info>
    <constants/>
    <properties>
      <scope type="public"/>
      <scope type="protected"/>
      <scope type="private"/>
    </properties>
    <methods>
      <scope type="public">
        <method name="__callStatic" returntype="mixed" static="true">
          <description>Magic method to create all html tags automatically.</description>
          <parameters>
            <parameter name="$name" type="string" defaultvalue="">
              <description>The function name caught.
In this function it serves as the tag name.</description>
            </parameter>
            <parameter name="$arguments" type="array" defaultvalue="">
              <description>All function arguments.
They serve as the content, id and class, like DOM::create().</description>
            </parameter>
          </parameters>
          <returndescription>The DOMElement created or NULL if the tag is not valid.</returndescription>
          <throws/>
          <deprecated/>
        </method>
        <method name="addClass" returntype="boolean" static="true">
          <description>Adds a class to the given DOMElement.</description>
          <parameters>
            <parameter name="$elem" type="DOMElement" defaultvalue="">
              <description>The element to add the class.</description>
            </parameter>
            <parameter name="$class" type="string" defaultvalue="">
              <description>The class name.</description>
            </parameter>
          </parameters>
          <returndescription>True on success, false on failure or if the class already exists.</returndescription>
          <throws/>
          <deprecated/>
        </method>
        <method name="removeClass" returntype="boolean" static="true">
          <description>Removes a class from a given DOMElement.</description>
          <parameters>
            <parameter name="$elem" type="DOMElement" defaultvalue="">
              <description>The element to add the class.</description>
            </parameter>
            <parameter name="$class" type="string" defaultvalue="">
              <description>The class name.</description>
            </parameter>
          </parameters>
          <returndescription>True on success, false on failure or if the class already exists.</returndescription>
          <throws/>
          <deprecated/>
        </method>
        <method name="hasClass" returntype="boolean" static="true">
          <description>Check if the given DOMElement has a given class.</description>
          <parameters>
            <parameter name="$elem" type="DOMElement" defaultvalue="">
              <description>The element to check for the class.</description>
            </parameter>
            <parameter name="$class" type="string" defaultvalue="">
              <description>The class name.</description>
            </parameter>
          </parameters>
          <returndescription>True if the element has the class, false otherwise.</returndescription>
          <throws/>
          <deprecated/>
        </method>
        <method name="style" returntype="mixed" static="true">
          <description>Set or get a style value for the given element.
This function will append the style rule in the style attribute.</description>
          <parameters>
            <parameter name="$elem" type="DOMElement" defaultvalue="">
              <description>The DOMElement to set or get the style value.</description>
            </parameter>
            <parameter name="$name" type="string" defaultvalue="">
              <description>The style name.</description>
            </parameter>
            <parameter name="$val" type="string" defaultvalue="">
              <description>If the value is NULL or FALSE, the value is considered negative and the style will be removed from the attribute.
If the value is empty string (default, null is not included), the function will return the style value.
Otherwise, the style will be appended to the style attribute and the new attribute will be returned.</description>
            </parameter>
          </parameters>
          <returndescription>Returns FALSE if there is an error.
The new style value on success.</returndescription>
          <throws/>
          <deprecated/>
        </method>
        <method name="select" returntype="mixed" static="true">
          <description>Selects nodes in the html document that match a given css selector.</description>
          <parameters>
            <parameter name="$selector" type="string" defaultvalue="">
              <description>The css selector to search for in the html document.
It does not support pseudo-* for the moment and only supports simple equality attribute-wise.
Can hold multiple selectors separated with comma.</description>
            </parameter>
            <parameter name="$context" type="mixed" defaultvalue="">
              <description>Can either be a DOMElement as the context of the search, or a css selector.
If the selector results in multiple DOMNodes, then the first is selected as the context.
It is NULL by default.</description>
            </parameter>
          </parameters>
          <returndescription>Returns the node list that matches the given css selector, or FALSE on malformed input.</returndescription>
          <throws/>
          <deprecated/>
        </method>
      </scope>
      <scope type="protected"/>
      <scope type="private">
        <method name="htmlTag" returntype="boolean" static="true">
          <description>Check if the given xml tag is a valid html tag.</description>
          <parameters>
            <parameter name="$tag" type="string" defaultvalue="">
              <description>The html tag to be checked.</description>
            </parameter>
          </parameters>
          <returndescription>True if valid, false otherwise.</returndescription>
          <throws/>
          <deprecated/>
        </method>
      </scope>
    </methods>
  </class>
</manual>
