<?xml version="1.0" encoding="UTF-8"?>
<manual library="DEV" package="Core" namespace="\sql">
  <class name="sqlQuery" abstract="">
    <info>
      <version>0.1</version>
      <build>3</build>
      <datecreated>1396340748</datecreated>
      <daterevised>1417194224</daterevised>
      <extends>
        <object>\DEV\Prototype\sqlObject</object>
      </extends>
      <implements/>
      <throws/>
      <title>Developer's database sql query manager.</title>
      <description>Manages all database queries.</description>
      <deprecated/>
    </info>
    <constants/>
    <properties>
      <scope type="public"/>
      <scope type="protected"/>
      <scope type="private">
        <prop type="string" name="domain">
          <description>The query domain.</description>
        </prop>
        <prop type="vcs" name="vcs">
          <description>The vcs manager object.</description>
        </prop>
      </scope>
    </properties>
    <methods>
      <scope type="public">
        <method name="__construct" returntype="void">
          <description>Initializes the object's vcs and calls the parent's constructor.</description>
          <parameters>
            <parameter name="$domain" type="string" defaultvalue="">
              <description>The query domain.</description>
            </parameter>
            <parameter name="$id" type="string" defaultvalue="">
              <description>The query id.
If empty, one is generated by random for creating a new query.</description>
            </parameter>
          </parameters>
          <returndescription/>
          <throws/>
          <deprecated/>
        </method>
        <method name="create" returntype="boolean">
          <description>Creates a new sql query.</description>
          <parameters>
            <parameter name="$title" type="string" defaultvalue="">
              <description>The query title.</description>
            </parameter>
            <parameter name="$description" type="string" defaultvalue="">
              <description>The query description.</description>
            </parameter>
          </parameters>
          <returndescription>True on success, false on failure.</returndescription>
          <throws/>
          <deprecated/>
        </method>
        <method name="remove" returntype="boolean">
          <description>Remove the sql query from the repository.
Use the sqlDomain function instead to remove the page from the map.</description>
          <parameters/>
          <returndescription>True on success, false on failure.</returndescription>
          <throws/>
          <deprecated/>
        </method>
        <method name="update" returntype="boolean">
          <description>Updates the query's repository item and calls the parent function to update the sql object.</description>
          <parameters>
            <parameter name="$title" type="string" defaultvalue="">
              <description>The query title.</description>
            </parameter>
            <parameter name="$query" type="string" defaultvalue="">
              <description>The SQL plain query.</description>
            </parameter>
            <parameter name="$description" type="string" defaultvalue="">
              <description>The query description.</description>
            </parameter>
            <parameter name="$attributes" type="array" defaultvalue="">
              <description>An array of description for each attribute in the query.</description>
            </parameter>
          </parameters>
          <returndescription>True on success, false on failure.</returndescription>
          <throws/>
          <deprecated/>
        </method>
        <method name="getQuery" returntype="string">
          <description>Gets the executable query code.</description>
          <parameters>
            <parameter name="$attr" type="array" defaultvalue="">
              <description>An associative array of attributes for the query.</description>
            </parameter>
          </parameters>
          <returndescription>The query sql code.</returndescription>
          <throws/>
          <deprecated/>
        </method>
      </scope>
      <scope type="protected">
        <method name="getObjectFullPath" returntype="string">
          <description>Implementation of the abstract function from the parent class.
Returns the full path of the object inside the repository.</description>
          <parameters/>
          <returndescription>The object's full path.</returndescription>
          <throws/>
          <deprecated/>
        </method>
      </scope>
      <scope type="private">
        <method name="getItemID" returntype="string">
          <description>Gets the item id for the vcs.</description>
          <parameters/>
          <returndescription>The vcs item id.</returndescription>
          <throws/>
          <deprecated/>
        </method>
      </scope>
    </methods>
  </class>
</manual>
