<?xml version="1.0" encoding="UTF-8"?>
<manual library="RTL" package="Comm" namespace="\">
  <class name="dbConnection" abstract="">
    <info>
      <version>2.0</version>
      <build>1</build>
      <datecreated>1418202337</datecreated>
      <daterevised>1440509391</daterevised>
      <extends>
        <object>\API\Comm\database\dbConnection</object>
      </extends>
      <implements/>
      <throws/>
      <title>Redback Retail Database Connection handler</title>
      <description>Connects to Redback's retail database and executes all the red sql queries.</description>
      <deprecated/>
    </info>
    <constants/>
    <properties>
      <scope type="public"/>
      <scope type="protected"/>
      <scope type="private">
        <prop type="settingsManager" name="settings" static="true">
          <description>The database server settings manager object.</description>
        </prop>
      </scope>
    </properties>
    <methods>
      <scope type="public">
        <method name="__construct" returntype="void">
          <description>Create a database connector instance.</description>
          <parameters/>
          <returndescription/>
          <throws/>
          <deprecated/>
        </method>
        <method name="execute" returntype="mixed">
          <description>Executes a core sql query (dbQuery) to the enterprise database.</description>
          <parameters>
            <parameter name="$dbQuery" type="dbQuery" defaultvalue="">
              <description>The query to be executed.</description>
            </parameter>
            <parameter name="$attr" type="array" defaultvalue="">
              <description>A number of attributes to be passed as arguments to the query.
It is an associative array to respond to the sql parameters.</description>
            </parameter>
          </parameters>
          <returndescription>The sql query result resource.</returndescription>
          <throws/>
          <deprecated/>
        </method>
      </scope>
      <scope type="protected"/>
      <scope type="private">
        <method name="getServerSettings" returntype="settingsManager">
          <description>Gets the server credentials handler.</description>
          <parameters/>
          <returndescription>The settingsManager object.</returndescription>
          <throws/>
          <deprecated/>
        </method>
      </scope>
    </methods>
  </class>
</manual>
