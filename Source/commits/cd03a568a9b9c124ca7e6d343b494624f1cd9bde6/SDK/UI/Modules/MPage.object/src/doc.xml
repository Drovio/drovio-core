<?xml version="1.0" encoding="UTF-8"?>
<manual library="UI" package="Modules" namespace="\">
  <class name="MPage" abstract="" namespace="">
    <info>
      <version/>
      <datecreated>1402471391</datecreated>
      <daterevised>1403516056</daterevised>
      <extends>\UI\Html\HTMLContent</extends>
      <implements/>
      <throws/>
      <title>HTML Module Page Builder</title>
      <description>Builds the inner module page as an entire page.</description>
      <deprecated/>
    </info>
    <constants>
      <const type="string" name="MISC_HOLDER">
        <description>The page miscellaneous holder.</description>
      </const>
    </constants>
    <properties>
      <scope type="public"/>
      <scope type="protected"/>
      <scope type="private">
        <prop type="string" name="title">
          <description>The page title.</description>
        </prop>
        <prop type="DOMElement" name="misc">
          <description>A pool for dropping auxiliary elements.</description>
        </prop>
      </scope>
    </properties>
    <methods>
      <scope type="public">
        <method name="build" returntype="MPage">
          <description>Builds the module page.</description>
          <parameters>
            <parameter name="$title" type="string" defaultvalue="">
              <description>The page title.</description>
            </parameter>
            <parameter name="$class" type="string" defaultvalue="">
              <description>The content extra class.</description>
            </parameter>
            <parameter name="$loadHtml" type="boolean" defaultvalue="">
              <description>Load inner html from external file.</description>
            </parameter>
          </parameters>
          <returndescription>The module page object.</returndescription>
          <throws/>
          <deprecated/>
        </method>
        <method name="addToolbarNavItem" returntype="DOMElement">
          <description>Inserts a new toolbar navigation item.</description>
          <parameters>
            <parameter name="$id" type="string" defaultvalue="">
              <description>The item's id</description>
            </parameter>
            <parameter name="$title" type="string" defaultvalue="">
              <description>The item's title</description>
            </parameter>
            <parameter name="$class" type="string" defaultvalue="">
              <description>The item's class</description>
            </parameter>
            <parameter name="$collection" type="DOMElement" defaultvalue="">
              <description>The ribbon's collection that will appear at item click.</description>
            </parameter>
            <parameter name="$ribbonType" type="string" defaultvalue="">
              <description>The ribbon type. See HTMLRibbon for more information.</description>
            </parameter>
            <parameter name="$type" type="string" defaultvalue="">
              <description>The ribbon popup type (if float). See HTMLRibbon for more information.</description>
            </parameter>
            <parameter name="$pinnable" type="boolean" defaultvalue="">
              <description>Sets the ribbon pinnable. See HTMLRibbon for more information.</description>
            </parameter>
            <parameter name="$index" type="integer" defaultvalue="">
              <description>The item's position index.</description>
            </parameter>
            <parameter name="$ico" type="mixed" defaultvalue="">
              <description>Defines whether this item will have an ico. It can be used as DOMElement to set the ico.</description>
            </parameter>
          </parameters>
          <returndescription>The toolbar item.</returndescription>
          <throws/>
          <deprecated/>
        </method>
        <method name="getRibbonCollection" returntype="DOMElement">
          <description>Builds and returns a ribbon collection from RTRibbon.</description>
          <parameters>
            <parameter name="$id" type="string" defaultvalue="">
              <description>The collection's id.</description>
            </parameter>
            <parameter name="$moduleID" type="integer" defaultvalue="">
              <description>Sets the module id for auto loading.</description>
            </parameter>
            <parameter name="$viewName" type="string" defaultvalue="">
              <description>The module's view name for auto loading.</description>
            </parameter>
          </parameters>
          <returndescription>The ribbon collection.</returndescription>
          <throws/>
          <deprecated/>
        </method>
        <method name="getReport" returntype="mixed">
          <description>Get the ServerReport of this HTML Module Page or the object holder.
It depends on the call.</description>
          <parameters>
            <parameter name="$holder" type="string" defaultvalue="">
              <description>The page holder. If empty, it gets the page holder.</description>
            </parameter>
            <parameter name="$clearToolbar" type="boolean" defaultvalue="">
              <description>If set to TRUE, clears the toolbar from any navigation items.
TRUE by default.</description>
            </parameter>
          </parameters>
          <returndescription>The server report or the object holder.</returndescription>
          <throws/>
          <deprecated/>
        </method>
        <method name="getPageHolder" returntype="string" static="true">
          <description>Gets the RCPage module holder selector.</description>
          <parameters/>
          <returndescription>The RCPage holder</returndescription>
          <throws/>
          <deprecated/>
        </method>
        <method name="appendToMisc" returntype="MPage">
          <description>Appends a DOMElement to the auxiliary pool</description>
          <parameters>
            <parameter name="$element" type="DOMElement" defaultvalue="">
              <description>The element to be appended.</description>
            </parameter>
          </parameters>
          <returndescription>The MPage object.</returndescription>
          <throws/>
          <deprecated/>
        </method>
        <method name="setPageTitle" returntype="void">
          <description>Sets the page title.</description>
          <parameters>
            <parameter name="$title" type="string" defaultvalue="">
              <description>The new page title.</description>
            </parameter>
          </parameters>
          <returndescription/>
          <throws/>
          <deprecated/>
        </method>
      </scope>
      <scope type="protected">
        <method name="getParentFilename" returntype="string">
          <description>Gets the parent's filename for loading the html from external file.</description>
          <parameters/>
          <returndescription>The parent script name.</returndescription>
          <throws/>
          <deprecated/>
        </method>
      </scope>
      <scope type="private"/>
    </methods>
  </class>
</manual>
