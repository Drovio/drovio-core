<?xml version="1.0" encoding="UTF-8"?>
<manual library="DEV" package="WebExtensions" namespace="\components\source">
  <class name="sourceObject" abstract="" namespace="">
    <info>
      <version/>
      <datecreated>1400775424</datecreated>
      <daterevised>1400827366</daterevised>
      <extends>\DEV\Prototype\classObject</extends>
      <implements/>
      <throws/>
      <title>Extension Source Object</title>
      <description>Extension Source Object Manager</description>
      <deprecated/>
    </info>
    <constants/>
    <properties>
      <scope type="public"/>
      <scope type="protected"/>
      <scope type="private">
        <prop type="extension" name="ext">
          <description>The extension object.</description>
        </prop>
        <prop type="sourceMap" name="sourceMap">
          <description>The sourceMap object.</description>
        </prop>
        <prop type="vcs" name="vcs">
          <description>The source vcs manager object.</description>
        </prop>
      </scope>
    </properties>
    <methods>
      <scope type="public">
        <method name="__construct" returntype="void">
          <description>Initializes the vcs information for the object and constructs the classObject.</description>
          <parameters>
            <parameter name="$extID" type="integer" defaultvalue="">
              <description>The extension id.</description>
            </parameter>
            <parameter name="$library" type="string" defaultvalue="">
              <description>The library name.</description>
            </parameter>
            <parameter name="$package" type="string" defaultvalue="">
              <description>The package name.</description>
            </parameter>
            <parameter name="$namespace" type="string" defaultvalue="">
              <description>The object's namespace (separated by "::" or "_").</description>
            </parameter>
            <parameter name="$objectName" type="string" defaultvalue="">
              <description>The object's name.</description>
            </parameter>
          </parameters>
          <returndescription/>
          <throws/>
          <deprecated/>
        </method>
        <method name="create" returntype="boolean">
          <description>Create a new extension source object.</description>
          <parameters>
            <parameter name="$name" type="string" defaultvalue="">
              <description>The object's name.</description>
            </parameter>
            <parameter name="$title" type="string" defaultvalue="">
              <description>The object's title.</description>
            </parameter>
            <parameter name="$phpFile" type="boolean" defaultvalue="">
              <description>Indicator whether this object will have a php source code file.</description>
            </parameter>
            <parameter name="$jsFile" type="boolean" defaultvalue="">
              <description>Indicator whether this object will have a javascript file.</description>
            </parameter>
            <parameter name="$cssFile" type="boolean" defaultvalue="">
              <description>Indicator whether this object will have a css file.</description>
            </parameter>
          </parameters>
          <returndescription>True on success, false on failure.</returndescription>
          <throws/>
          <deprecated/>
        </method>
        <method name="updateSourceCode" returntype="mixed">
          <description>Updates the source code of the object.</description>
          <parameters>
            <parameter name="$code" type="string" defaultvalue="">
              <description>The new source code.</description>
            </parameter>
          </parameters>
          <returndescription>Returns TRUE on success or FALSE on failure.
Returns a string telling whether there is a syntax error in the php file.</returndescription>
          <throws/>
          <deprecated/>
        </method>
        <method name="updateSourceDoc" returntype="boolean">
          <description>Updates the source documentation of the object.</description>
          <parameters>
            <parameter name="$content" type="string" defaultvalue="">
              <description>The documentation in xml format.</description>
            </parameter>
          </parameters>
          <returndescription>True on success, false on failure.</returndescription>
          <throws/>
          <deprecated/>
        </method>
        <method name="updateJSCode" returntype="boolean">
          <description>Updates the javascript code of the object.</description>
          <parameters>
            <parameter name="$code" type="string" defaultvalue="">
              <description>The new javascript code.</description>
            </parameter>
          </parameters>
          <returndescription>True on success, false on failure.</returndescription>
          <throws/>
          <deprecated/>
        </method>
        <method name="updateCSSCode" returntype="boolean">
          <description>Updates the css code of the object.</description>
          <parameters>
            <parameter name="$code" type="string" defaultvalue="">
              <description>The new css code.</description>
            </parameter>
          </parameters>
          <returndescription>True on success, false on failure.</returndescription>
          <throws/>
          <deprecated/>
        </method>
        <method name="updateCSSModel" returntype="boolean">
          <description>Updates the css model of the object.</description>
          <parameters>
            <parameter name="$model" type="string" defaultvalue="">
              <description>The new css model in html format.</description>
            </parameter>
          </parameters>
          <returndescription>True on success, false on failure.</returndescription>
          <throws/>
          <deprecated/>
        </method>
        <method name="loadSourceCode" returntype="void">
          <description>Runs (includes) the trunk's source code file and returns the include result.</description>
          <parameters/>
          <returndescription/>
          <throws/>
          <deprecated/>
        </method>
        <method name="updateItem" returntype="void">
          <description>Update the item in the working index of the vcs.</description>
          <parameters>
            <parameter name="$forceCommit" type="boolean" defaultvalue="">
              <description>Tells whether the object will be included in the next commit.</description>
            </parameter>
          </parameters>
          <returndescription/>
          <throws/>
          <deprecated/>
        </method>
      </scope>
      <scope type="protected">
        <method name="getObjectFullPath" returntype="string">
          <description>Implementation of the abstract function from the parent class.</description>
          <parameters/>
          <returndescription>The full path of the object inside the repository.</returndescription>
          <throws/>
          <deprecated/>
        </method>
        <method name="getItemID" returntype="string">
          <description>Gets the id of the current vcs item.</description>
          <parameters/>
          <returndescription>The item's id.</returndescription>
          <throws/>
          <deprecated/>
        </method>
      </scope>
      <scope type="private">
        <method name="buildHeader" returntype="string">
          <description>Build the source's header and returns it.</description>
          <parameters/>
          <returndescription>The object's header code.</returndescription>
          <throws/>
          <deprecated/>
        </method>
        <method name="initFiles" returntype="void">
          <description>Init all object's files.</description>
          <parameters>
            <parameter name="$phpFile" type="boolean" defaultvalue="">
              <description>Indicator whether to build php source code file.</description>
            </parameter>
            <parameter name="$jsFile" type="boolean" defaultvalue="">
              <description>Indicator whether to build javascript file.</description>
            </parameter>
            <parameter name="$cssFile" type="boolean" defaultvalue="">
              <description>Indicator whether to build css file.</description>
            </parameter>
          </parameters>
          <returndescription/>
          <throws/>
          <deprecated/>
        </method>
        <method name="getItemPath" returntype="string">
          <description>Gets the item's path (with library, package, namespace etc) for the vcs.</description>
          <parameters/>
          <returndescription>The item's path.</returndescription>
          <throws/>
          <deprecated/>
        </method>
        <method name="loadSourceMap" returntype="object">
          <description>Initializes the source map object for getting the source information from the source index.</description>
          <parameters/>
          <returndescription>The sourceMap object.</returndescription>
          <throws/>
          <deprecated/>
        </method>
        <method name="updateMapFile" returntype="void">
          <description>Updates the source map index file in the vcs.</description>
          <parameters/>
          <returndescription/>
          <throws/>
          <deprecated/>
        </method>
      </scope>
    </methods>
  </class>
</manual>
