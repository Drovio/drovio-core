<?xml version="1.0" encoding="UTF-8"?>
<manual library="DEV" package="Projects" namespace="\">
  <class name="projectLibrary" abstract="">
    <info>
      <version>2.2</version>
      <build>1</build>
      <datecreated>1409061300</datecreated>
      <daterevised>1414572381</daterevised>
      <extends/>
      <implements/>
      <throws/>
      <title>Project Library Manager</title>
      <description>Manages the applications in the generic library (paths, tokens etc.)</description>
      <deprecated/>
    </info>
    <constants/>
    <properties>
      <scope type="public"/>
      <scope type="protected"/>
      <scope type="private"/>
    </properties>
    <methods>
      <scope type="public">
        <method name="getPublishedPath" returntype="string" static="true">
          <description>Get the project's publish library folder path.</description>
          <parameters>
            <parameter name="$projectID" type="integer" defaultvalue="">
              <description>The project id.</description>
            </parameter>
            <parameter name="$version" type="string" defaultvalue="">
              <description>The project version.</description>
            </parameter>
          </parameters>
          <returndescription>The published folder path.</returndescription>
          <throws/>
          <deprecated/>
        </method>
        <method name="getLastProjectVersion" returntype="string" static="true">
          <description>Get the project's last published version by the time created.</description>
          <parameters>
            <parameter name="$projectID" type="integer" defaultvalue="">
              <description>The project id.</description>
            </parameter>
          </parameters>
          <returndescription>The project version string.</returndescription>
          <throws/>
          <deprecated/>
        </method>
        <method name="getTeamProjectVersion" returntype="string" static="true">
          <description>Get the team's project version.</description>
          <parameters>
            <parameter name="$projectID" type="integer" defaultvalue="">
              <description>The project id.</description>
            </parameter>
          </parameters>
          <returndescription>The project version string.</returndescription>
          <throws/>
          <deprecated>Function moved to \BSS\Dashboard\appLibrary.</deprecated>
        </method>
        <method name="updateTeamProjectVersion" returntype="boolean" static="true">
          <description>Updates the team's project version to the next declared version (if any).

Returning true doesn't mean that there was an update.</description>
          <parameters>
            <parameter name="$projectID" type="integer" defaultvalue="">
              <description>The project id to update the version.</description>
            </parameter>
          </parameters>
          <returndescription>True on success, false on failure.</returndescription>
          <throws/>
          <deprecated>Function moved to \BSS\Dashboard\appLibrary.</deprecated>
        </method>
        <method name="setTeamProjectVersion" returntype="boolean" static="true">
          <description>Set the next version of a project for a team.
The project must be in the team's library.</description>
          <parameters>
            <parameter name="$projectID" type="integer" defaultvalue="">
              <description>The project id.</description>
            </parameter>
            <parameter name="$version" type="string" defaultvalue="">
              <description>The project's version selected by the team.</description>
            </parameter>
          </parameters>
          <returndescription>True on success, false on failure.</returndescription>
          <throws/>
          <deprecated>Function moved to \BSS\Dashboard\appLibrary.</deprecated>
        </method>
      </scope>
      <scope type="protected"/>
      <scope type="private"/>
    </methods>
  </class>
</manual>
