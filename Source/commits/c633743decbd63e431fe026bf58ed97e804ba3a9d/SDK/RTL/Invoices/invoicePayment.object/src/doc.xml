<?xml version="1.0" encoding="UTF-8"?>
<manual library="RTL" package="Invoices" namespace="\">
  <class name="invoicePayment" abstract="">
    <info>
      <version>0.2</version>
      <build>1</build>
      <datecreated>1442665503</datecreated>
      <daterevised>1442666424</daterevised>
      <extends/>
      <implements/>
      <throws/>
      <title>Invoice Payment Manager</title>
      <description>Manages invoice payments.</description>
      <deprecated/>
    </info>
    <constants/>
    <properties>
      <scope type="public"/>
      <scope type="protected"/>
      <scope type="private">
        <prop type="dbConnection" name="dbc">
          <description>The retail database connection manager.</description>
        </prop>
        <prop type="string" name="invoiceID">
          <description>The invoice id.</description>
        </prop>
        <prop type="string" name="paymentID">
          <description>The payment id.</description>
        </prop>
        <prop type="boolean" name="valid">
          <description>Whether the invoice is valid with the current company and it is not closed.</description>
        </prop>
      </scope>
    </properties>
    <methods>
      <scope type="public">
        <method name="__construct" returntype="void">
          <description>Create a new instance of the payment manager.</description>
          <parameters>
            <parameter name="$invoiceID" type="string" defaultvalue="">
              <description>The invoice reference id.</description>
            </parameter>
            <parameter name="$paymentID" type="string" defaultvalue="">
              <description>The payment id.
Leave empty for new payment.
It is empty by default.</description>
            </parameter>
          </parameters>
          <returndescription/>
          <throws/>
          <deprecated/>
        </method>
        <method name="add" returntype="boolean">
          <description>Add a new invoice payment.</description>
          <parameters>
            <parameter name="$paymentType" type="integer" defaultvalue="">
              <description>The payment type id.
Use getAllPaymentTypes() to get the types.</description>
            </parameter>
            <parameter name="$payment" type="float" defaultvalue="">
              <description>The payment value.</description>
            </parameter>
            <parameter name="$notes" type="string" defaultvalue="">
              <description>Any notes about the payment.</description>
            </parameter>
            <parameter name="$referenceID" type="string" defaultvalue="">
              <description>A reference id for this payment.
This could be another invoice to be used as credit or anything.</description>
            </parameter>
          </parameters>
          <returndescription>True on success, false on failure.</returndescription>
          <throws/>
          <deprecated/>
        </method>
        <method name="update" returntype="boolean">
          <description>Update a payment value.</description>
          <parameters>
            <parameter name="$payment" type="float" defaultvalue="">
              <description>The payment value.</description>
            </parameter>
            <parameter name="$notes" type="string" defaultvalue="">
              <description>Any notes about the payment.</description>
            </parameter>
            <parameter name="$referenceID" type="string" defaultvalue="">
              <description>A reference id for this payment.
This could be another invoice to be used as credit or anything.</description>
            </parameter>
          </parameters>
          <returndescription>True on success, false on failure.</returndescription>
          <throws/>
          <deprecated/>
        </method>
        <method name="remove" returntype="boolean">
          <description>Remove a payment from the invoice.</description>
          <parameters/>
          <returndescription>True on success, false on failure.</returndescription>
          <throws/>
          <deprecated/>
        </method>
        <method name="getAllPayments" returntype="array">
          <description>Get all invoice payments.</description>
          <parameters/>
          <returndescription>An array of all current invoice payments.</returndescription>
          <throws/>
          <deprecated/>
        </method>
        <method name="getAllPaymentTypes" returntype="array" static="true">
          <description>Get all invoice payment types.</description>
          <parameters/>
          <returndescription>An array of all invoice payment types by id and title (in current locale).</returndescription>
          <throws/>
          <deprecated/>
        </method>
      </scope>
      <scope type="protected"/>
      <scope type="private">
        <method name="validate" returntype="boolean">
          <description>Validate whether the current invoice is owned by the current team.</description>
          <parameters>
            <parameter name="$editable" type="boolean" defaultvalue="">
              <description>Extra check whether the invoice is editable (not completed) or not.</description>
            </parameter>
          </parameters>
          <returndescription>True if valid, false otherwise.</returndescription>
          <throws/>
          <deprecated/>
        </method>
      </scope>
    </methods>
  </class>
</manual>
