<?xml version="1.0" encoding="UTF-8"?>
<manual library="DEV" package="Profiler" namespace="\">
  <class name="logger" abstract="">
    <info>
      <version>4.1</version>
      <build>2</build>
      <datecreated>1392022356</datecreated>
      <daterevised>1418653495</daterevised>
      <extends>
        <object>\DEV\Profiler\log\activityLogger</object>
      </extends>
      <implements/>
      <throws/>
      <title>Developer's System Logger for Core</title>
      <description>Logs all messages of any priority and category.
It logs messages to memory for the platform log viewer.
It logs messages below warning (to error) to project log files.</description>
      <deprecated/>
    </info>
    <constants/>
    <properties>
      <scope type="public"/>
      <scope type="protected"/>
      <scope type="private">
        <prop type="logger" name="instance" static="true">
          <description>The logger instance.</description>
        </prop>
        <prop type="array" name="logPool" static="true">
          <description>The array of log messages.</description>
        </prop>
      </scope>
    </properties>
    <methods>
      <scope type="public">
        <method name="getInstance" returntype="logger" static="true">
          <description>Get the static logger instance.</description>
          <parameters/>
          <returndescription>The logger instance.</returndescription>
          <throws/>
          <deprecated/>
        </method>
        <method name="log" returntype="void" static="true">
          <description>Logs or inserts a log message to the pool.</description>
          <parameters>
            <parameter name="$message" type="string" defaultvalue="">
              <description>The log short message.</description>
            </parameter>
            <parameter name="$priority" type="integer" defaultvalue="">
              <description>Priority indicator as defined by logger constants</description>
            </parameter>
            <parameter name="$description" type="string" defaultvalue="">
              <description>The log long description. It supports arrays and numbers. It is written with print_r().</description>
            </parameter>
          </parameters>
          <returndescription/>
          <throws/>
          <deprecated/>
        </method>
        <method name="flush" returntype="array" static="true">
          <description>Gets all log messages as array</description>
          <parameters/>
          <returndescription>All log messages from the pool.
An array where each entry has a log array with its contents.</returndescription>
          <throws/>
          <deprecated/>
        </method>
        <method name="clear" returntype="void" static="true">
          <description>Clears all log messages</description>
          <parameters/>
          <returndescription/>
          <throws/>
          <deprecated/>
        </method>
        <method name="activate" returntype="void" static="true">
          <description>Activate logger.</description>
          <parameters>
            <parameter name="$priority" type="integer" defaultvalue="">
              <description>The logger priority. It prevents from logging unwanted messages instead of later filtering the view.</description>
            </parameter>
          </parameters>
          <returndescription/>
          <throws/>
          <deprecated/>
        </method>
        <method name="deactivate" returntype="void" static="true">
          <description>Deactivate logger.</description>
          <parameters/>
          <returndescription/>
          <throws/>
          <deprecated/>
        </method>
        <method name="status" returntype="mixed" static="true">
          <description>Gets the status of the logger.</description>
          <parameters/>
          <returndescription>For active logger, it returns the priority, otherwise it returns false.</returndescription>
          <throws/>
          <deprecated/>
        </method>
      </scope>
      <scope type="protected">
        <method name="getLogFolder" returntype="string" static="true">
          <description>Get the core project's log folder</description>
          <parameters/>
          <returndescription>The project's log folder.</returndescription>
          <throws/>
          <deprecated/>
        </method>
      </scope>
      <scope type="private">
        <method name="__construct" returntype="void">
          <description>Initialize the logger object and clear the log pool.</description>
          <parameters/>
          <returndescription/>
          <throws/>
          <deprecated/>
        </method>
        <method name="record" returntype="void" static="true">
          <description>Record the message given to the log pool. It inserts extra information depending on the log type.</description>
          <parameters>
            <parameter name="$messageLog" type="array" defaultvalue="">
              <description>The messageLog array as created by the log function.</description>
            </parameter>
          </parameters>
          <returndescription/>
          <throws/>
          <deprecated/>
        </method>
      </scope>
    </methods>
  </class>
</manual>
