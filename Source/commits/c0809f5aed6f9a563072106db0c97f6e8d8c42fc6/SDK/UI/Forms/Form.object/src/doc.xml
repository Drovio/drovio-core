<?xml version="1.0" encoding="UTF-8"?>
<manual library="UI" package="Forms" namespace="\">
  <class name="Form" abstract="">
    <info>
      <version>1.1</version>
      <build>3</build>
      <datecreated>1415976629</datecreated>
      <daterevised>1424332982</daterevised>
      <extends>
        <object>\ESS\Prototype\html\FormPrototype</object>
      </extends>
      <implements/>
      <throws/>
      <title>Form object</title>
      <description>Builds a basic form based on the FormPrototype and provides a "factory" for building all the necessary form items.

It also implements the FormProtocol.</description>
      <deprecated/>
    </info>
    <constants/>
    <properties>
      <scope type="public"/>
      <scope type="protected"/>
      <scope type="private"/>
    </properties>
    <methods>
      <scope type="public">
        <method name="build" returntype="Form">
          <description>Builds the form element.</description>
          <parameters>
            <parameter name="$action" type="string" defaultvalue="">
              <description>The form action url string.</description>
            </parameter>
            <parameter name="$async" type="string" defaultvalue="">
              <description>Sets the async attribute for simple forms.</description>
            </parameter>
          </parameters>
          <returndescription>The Form object.</returndescription>
          <throws/>
          <deprecated/>
        </method>
        <method name="getPostedFormID" returntype="string" static="true">
          <description>Gets the form ID from the form that performed the post action.</description>
          <parameters/>
          <returndescription>The form id.</returndescription>
          <throws/>
          <deprecated/>
        </method>
        <method name="validate" returntype="boolean" static="true">
          <description>Validate a form with the FormProtocol to see if no hidden value is modified.</description>
          <parameters>
            <parameter name="$clear" type="boolean" defaultvalue="">
              <description>Whether to clear the form registration from the session or not.
It is false by default.</description>
            </parameter>
          </parameters>
          <returndescription>True on success, false on failure.</returndescription>
          <throws/>
          <deprecated/>
        </method>
        <method name="getSubmitContent" returntype="string" static="true">
          <description>Get an HTMLServerReport containing form report content.
The content will be placed in the form report and the form will be also marked as submitted</description>
          <parameters>
            <parameter name="$content" type="DOMElement" defaultvalue="">
              <description>The report content.</description>
            </parameter>
            <parameter name="$fullReset" type="boolean" defaultvalue="">
              <description>Specify whether the form will have a full reset after the content arrives or just the passwords.</description>
            </parameter>
          </parameters>
          <returndescription>The server report output.</returndescription>
          <throws/>
          <deprecated/>
        </method>
        <method name="getInput" returntype="DOMElement">
          <description>Builds and returns an input item.</description>
          <parameters>
            <parameter name="$type" type="string" defaultvalue="">
              <description>The input's type.
This must abide by the rules of the possible input types.</description>
            </parameter>
            <parameter name="$name" type="string" defaultvalue="">
              <description>The input's name.</description>
            </parameter>
            <parameter name="$value" type="string" defaultvalue="">
              <description>The input's default value.</description>
            </parameter>
            <parameter name="$class" type="string" defaultvalue="">
              <description>The extra class for the input.</description>
            </parameter>
            <parameter name="$autofocus" type="boolean" defaultvalue="">
              <description>Inserts the autofocus attribute to the input.</description>
            </parameter>
            <parameter name="$required" type="boolean" defaultvalue="">
              <description>Indicates this input as required.</description>
            </parameter>
          </parameters>
          <returndescription>The input element.</returndescription>
          <throws/>
          <deprecated/>
        </method>
        <method name="getLabel" returntype="DOMElement">
          <description>Builds and returns a form label.</description>
          <parameters>
            <parameter name="$text" type="string" defaultvalue="">
              <description>The label's text.</description>
            </parameter>
            <parameter name="$for" type="string" defaultvalue="">
              <description>The input's id where this label is pointing to.</description>
            </parameter>
            <parameter name="$class" type="string" defaultvalue="">
              <description>The extra class for the label.</description>
            </parameter>
          </parameters>
          <returndescription>The label element.</returndescription>
          <throws/>
          <deprecated/>
        </method>
        <method name="getButton" returntype="DOMElement">
          <description>Builds and returns a button (as an input).</description>
          <parameters>
            <parameter name="$title" type="string" defaultvalue="">
              <description>The button's title.</description>
            </parameter>
            <parameter name="$name" type="string" defaultvalue="">
              <description>The button's name.</description>
            </parameter>
            <parameter name="$class" type="string" defaultvalue="">
              <description>The extra class of the button.</description>
            </parameter>
          </parameters>
          <returndescription>The button element.</returndescription>
          <throws/>
          <deprecated/>
        </method>
        <method name="getSubmitButton" returntype="DOMElement">
          <description>Builds and returns a specific submit button.</description>
          <parameters>
            <parameter name="$title" type="string" defaultvalue="">
              <description>The button's title.</description>
            </parameter>
            <parameter name="$id" type="string" defaultvalue="">
              <description>The button's id.</description>
            </parameter>
            <parameter name="$name" type="string" defaultvalue="">
              <description>The button's name.</description>
            </parameter>
          </parameters>
          <returndescription>The button element.</returndescription>
          <throws/>
          <deprecated/>
        </method>
        <method name="getResetButton" returntype="DOMElement">
          <description>Builds and returns a specific reset button.</description>
          <parameters>
            <parameter name="$title" type="string" defaultvalue="">
              <description>The button's title.</description>
            </parameter>
            <parameter name="$id" type="string" defaultvalue="">
              <description>The button's id.</description>
            </parameter>
          </parameters>
          <returndescription>The button element.</returndescription>
          <throws/>
          <deprecated/>
        </method>
        <method name="getTextarea" returntype="DOMElement">
          <description>Builds and returns a form textarea.</description>
          <parameters>
            <parameter name="$name" type="string" defaultvalue="">
              <description>The textarea's name.</description>
            </parameter>
            <parameter name="$value" type="string" defaultvalue="">
              <description>The textarea's default value.</description>
            </parameter>
            <parameter name="$class" type="string" defaultvalue="">
              <description>The extra class for the textarea.</description>
            </parameter>
            <parameter name="$autofocus" type="boolean" defaultvalue="">
              <description>Inserts the autofocus attribute to the input.</description>
            </parameter>
            <parameter name="$required" type="boolean" defaultvalue="">
              <description>Indicates this textarea as required.</description>
            </parameter>
          </parameters>
          <returndescription>The textarea element.</returndescription>
          <throws/>
          <deprecated/>
        </method>
        <method name="getFieldset" returntype="DOMElement">
          <description>Builds and returns an HTML5 fieldset.</description>
          <parameters>
            <parameter name="$title" type="string" defaultvalue="">
              <description>The fieldset's legend title.</description>
            </parameter>
            <parameter name="$name" type="string" defaultvalue="">
              <description>The fieldset's name.</description>
            </parameter>
            <parameter name="$class" type="string" defaultvalue="">
              <description>The extra class for the fieldset.</description>
            </parameter>
          </parameters>
          <returndescription>The fieldset element.</returndescription>
          <throws/>
          <deprecated/>
        </method>
        <method name="getSelect" returntype="DOMElement">
          <description>Builds and returns an option select input.</description>
          <parameters>
            <parameter name="$name" type="string" defaultvalue="">
              <description>The select's name.</description>
            </parameter>
            <parameter name="$multiple" type="boolean" defaultvalue="">
              <description>Option for multiple selection.</description>
            </parameter>
            <parameter name="$class" type="string" defaultvalue="">
              <description>The extra class for the select item.</description>
            </parameter>
            <parameter name="$options" type="array" defaultvalue="">
              <description>An array of option elements as select contents.</description>
            </parameter>
          </parameters>
          <returndescription>The select element.</returndescription>
          <throws/>
          <deprecated/>
        </method>
        <method name="getResourceSelect" returntype="DOMElement">
          <description>Builds and returns a select input with a given resource.</description>
          <parameters>
            <parameter name="$name" type="string" defaultvalue="">
              <description>The select's name.</description>
            </parameter>
            <parameter name="$multiple" type="boolean" defaultvalue="">
              <description>Option for multiple selection.</description>
            </parameter>
            <parameter name="$class" type="string" defaultvalue="">
              <description>The extra class for the select item.</description>
            </parameter>
            <parameter name="$resource" type="array" defaultvalue="">
              <description>The select's resource as an associative array with key the value of the option and value the title.</description>
            </parameter>
            <parameter name="$selectedValue" type="string" defaultvalue="">
              <description>The selected value of the given resource.</description>
            </parameter>
          </parameters>
          <returndescription>The select element.</returndescription>
          <throws/>
          <deprecated/>
        </method>
        <method name="getOption" returntype="DOMElement">
          <description>Builds and returns a select option item.</description>
          <parameters>
            <parameter name="$title" type="string" defaultvalue="">
              <description>The option's title.</description>
            </parameter>
            <parameter name="$value" type="string" defaultvalue="">
              <description>The option's value.</description>
            </parameter>
            <parameter name="$selected" type="boolean" defaultvalue="">
              <description>Specifies a selected option in the select item.</description>
            </parameter>
            <parameter name="$id" type="string" defaultvalue="">
              <description>The option element id.</description>
            </parameter>
            <parameter name="$class" type="string" defaultvalue="">
              <description>The option element class.</description>
            </parameter>
          </parameters>
          <returndescription>The option element.</returndescription>
          <throws/>
          <deprecated/>
        </method>
        <method name="getOptionGroup" returntype="DOMElement">
          <description>Builds and returns a select option group.</description>
          <parameters>
            <parameter name="$label" type="string" defaultvalue="">
              <description>The group's lavel.</description>
            </parameter>
            <parameter name="$options" type="array" defaultvalue="">
              <description>An array of option elements for the group.</description>
            </parameter>
          </parameters>
          <returndescription>The option group element.</returndescription>
          <throws/>
          <deprecated/>
        </method>
        <method name="engageModule" returntype="Form">
          <description>Engage this form to post to a given module view.</description>
          <parameters>
            <parameter name="$moduleID" type="integer" defaultvalue="">
              <description>The module id to post to.</description>
            </parameter>
            <parameter name="$viewName" type="string" defaultvalue="">
              <description>The module's view name to post to.
If empty, gets the default module view.
It is empty by default.</description>
            </parameter>
          </parameters>
          <returndescription>The Form object.</returndescription>
          <throws/>
          <deprecated/>
        </method>
        <method name="engageApp" returntype="Form">
          <description>Engage this form to post to a given view of the current application.</description>
          <parameters>
            <parameter name="$viewName" type="string" defaultvalue="">
              <description>The app's view name to post to.
If empty, gets the default app view.
It is empty by default.</description>
            </parameter>
          </parameters>
          <returndescription>The Form object.</returndescription>
          <throws/>
          <deprecated/>
        </method>
      </scope>
      <scope type="protected">
        <method name="getInputID" returntype="string">
          <description>Create a system specific form input id.</description>
          <parameters>
            <parameter name="$name" type="string" defaultvalue="">
              <description>The input's name.</description>
            </parameter>
          </parameters>
          <returndescription>The input id</returndescription>
          <throws/>
          <deprecated/>
        </method>
      </scope>
      <scope type="private"/>
    </methods>
  </class>
</manual>
