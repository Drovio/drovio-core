<?xml version="1.0" encoding="UTF-8"?>
<manual>
  <class name="dvbLib" abstract="" namespace="\model\units\sql">
    <info>
      <version/>
      <datecreated>1372856970</datecreated>
      <daterevised>1372856970</daterevised>
      <extends>\API\Developer\model\version\vcs</extends>
      <implements/>
      <throws/>
      <title>Developer's Database Library Manager</title>
      <description>Handles the database library from the developer's view</description>
      <deprecated>Use \API\Developer\components\sql\dvbLib instead.</deprecated>
    </info>
    <constants>
      <const type="string" name="PATH">
        <description>The production path of the library</description>
      </const>
      <const type="string" name="REPOSITORY_PATH">
        <description>The repository path of the library</description>
      </const>
      <const type="string" name="MAP_PATH">
        <description>The mapping filepath</description>
      </const>
    </constants>
    <properties>
      <scope type="public"/>
      <scope type="protected"/>
      <scope type="private"/>
    </properties>
    <methods>
      <scope type="public">
        <method name="create_domain" returntype="boolean">
          <description>Create a domain in the sql library</description>
          <parameters>
            <parameter name="$name" type="string" defaultvalue="">
              <description>The domain name</description>
            </parameter>
            <parameter name="$parent" type="string" defaultvalue="">
              <description>The domain parent (separated by ".")</description>
            </parameter>
          </parameters>
          <deprecated/>
          <returndescription/>
          <throws/>
        </method>
        <method name="delete_domain" returntype="boolean">
          <description>Delete a domain from the sql library</description>
          <parameters>
            <parameter name="$domain" type="string" defaultvalue="">
              <description>The domain full name (separated by ".")</description>
            </parameter>
          </parameters>
          <deprecated/>
          <returndescription/>
          <throws/>
        </method>
        <method name="get_queryList" returntype="array">
          <description>Get the sql queries of a domain</description>
          <parameters>
            <parameter name="$domain" type="string" defaultvalue="">
              <description>The domain's full name (separated by ".")</description>
            </parameter>
          </parameters>
          <deprecated/>
          <returndescription/>
          <throws/>
        </method>
        <method name="get_domainList" returntype="array" static="true">
          <description>Gets the list of all domain</description>
          <parameters>
            <parameter name="$full" type="boolean" defaultvalue="">
              <description>If FALSE, the result will be nested arrays.
If TRUE, the result will be an array of full names.</description>
            </parameter>
          </parameters>
          <deprecated/>
          <returndescription/>
          <throws/>
        </method>
      </scope>
      <scope type="protected"/>
      <scope type="private">
        <method name="_get_subDomains" returntype="array">
          <description>Get the subdomains of a domain as a nested array</description>
          <parameters>
            <parameter name="$dom_parser" type="DOMParser" defaultvalue="">
              <description>The parser to parse the mapping file</description>
            </parameter>
            <parameter name="$base" type="DOMElement" defaultvalue="">
              <description>The base domain to act as a root for the subdomains</description>
            </parameter>
          </parameters>
          <deprecated/>
          <returndescription/>
          <throws/>
        </method>
        <method name="_get_subDomains_string" returntype="array">
          <description>Get the subdomains of a domain as a string array</description>
          <parameters>
            <parameter name="$dom_parser" type="DOMParser" defaultvalue="">
              <description>The parser to parse the mapping file</description>
            </parameter>
            <parameter name="$base" type="DOMElement" defaultvalue="">
              <description>The base domain to act as a root for the subdomains</description>
            </parameter>
          </parameters>
          <deprecated/>
          <returndescription/>
          <throws/>
        </method>
      </scope>
    </methods>
  </class>
</manual>
