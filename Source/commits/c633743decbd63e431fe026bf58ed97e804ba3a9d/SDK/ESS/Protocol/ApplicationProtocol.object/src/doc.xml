<?xml version="1.0" encoding="UTF-8"?>
<manual library="ESS" package="Protocol" namespace="\">
  <class name="ApplicationProtocol" abstract="">
    <info>
      <version>1.0</version>
      <build>5</build>
      <datecreated>1409833345</datecreated>
      <daterevised>1442700549</daterevised>
      <extends/>
      <implements/>
      <throws/>
      <title>Client-Server Application Handler Protocol</title>
      <description>This protocol is responsible for loading application views and content.
It uses the AsCoProtocol to send the requests and the HTML Server Report Handlers to receive data.</description>
      <deprecated/>
    </info>
    <constants/>
    <properties>
      <scope type="public"/>
      <scope type="protected"/>
      <scope type="private"/>
    </properties>
    <methods>
      <scope type="public">
        <method name="addAction" returntype="void" static="true">
          <description>Adds a custom action to a DOMElement.
This action will invoke the given application id with the viewName given.</description>
          <parameters>
            <parameter name="$item" type="DOMElement" defaultvalue="">
              <description>The item to attach the event listener to.</description>
            </parameter>
            <parameter name="$actionName" type="string" defaultvalue="">
              <description>The name of the data attribute for the action identifier.</description>
            </parameter>
            <parameter name="$appID" type="integer" defaultvalue="">
              <description>The application id to set as action.</description>
            </parameter>
            <parameter name="$viewName" type="string" defaultvalue="">
              <description>The application's view name.
If empty, get the application's default view.
Empty by default.</description>
            </parameter>
            <parameter name="$attr" type="array" defaultvalue="">
              <description>An associative array as a number of attributes to be sent to the server along with the request (attrName -&amp;gt; attrValue).</description>
            </parameter>
            <parameter name="$loading" type="boolean" defaultvalue="">
              <description>If true, set the page loading indicator.
False by default.</description>
            </parameter>
          </parameters>
          <returndescription/>
          <throws/>
          <deprecated/>
        </method>
        <method name="addAsync" returntype="void" static="true">
          <description>Adds async handler to container.
This enables the protocol to load the content asynchronously when the object given (holder) enters the DOM.</description>
          <parameters>
            <parameter name="$item" type="DOMElement" defaultvalue="">
              <description>The item to attach the event listener to.</description>
            </parameter>
            <parameter name="$appID" type="integer" defaultvalue="">
              <description>The application id to load.</description>
            </parameter>
            <parameter name="$viewName" type="string" defaultvalue="">
              <description>The application's view name.
If empty, get the application's default view.
Empty by default.</description>
            </parameter>
            <parameter name="$holder" type="string" defaultvalue="">
              <description>The DOM holder/receiver where the content will go.
It's a CSS selector.
If left empty, the content will decide the holder. If the content's holder is also empty, it goes as child of the sender.</description>
            </parameter>
            <parameter name="$startup" type="boolean" defaultvalue="">
              <description>Whether this action will be triggered when on next content.modified.</description>
            </parameter>
            <parameter name="$attr" type="array" defaultvalue="">
              <description>An associative array as a number of attributes to be sent to the server along with the request (attrName -&amp;gt; attrValue).</description>
            </parameter>
            <parameter name="$loading" type="boolean" defaultvalue="">
              <description>If true, set the page loading indicator.
False by default.</description>
            </parameter>
          </parameters>
          <returndescription/>
          <throws/>
          <deprecated/>
        </method>
        <method name="addActionGET" returntype="void" static="true">
          <description>Inserts an application handler to a DOMElement.
It interacts with the server (GET Request Method) and gets content.
It can be invoked by mouse click.</description>
          <parameters>
            <parameter name="$item" type="DOMElement" defaultvalue="">
              <description>The item to attach the event listener to.</description>
            </parameter>
            <parameter name="$appID" type="integer" defaultvalue="">
              <description>The application id to load.</description>
            </parameter>
            <parameter name="$viewName" type="string" defaultvalue="">
              <description>The application's view name.
If empty, get the application's default view.
Empty by default.</description>
            </parameter>
            <parameter name="$holder" type="string" defaultvalue="">
              <description>The DOM holder/receiver where the content will go.
It's a CSS selector.
If left empty, the content will decide the holder. If the content's holder is also empty, it goes as child of the sender.</description>
            </parameter>
            <parameter name="$attr" type="array" defaultvalue="">
              <description>An associative array as a number of attributes to be sent to the server along with the request (attrName -&amp;gt; attrValue).</description>
            </parameter>
            <parameter name="$loading" type="boolean" defaultvalue="">
              <description>If true, set the page loading indicator.
False by default.</description>
            </parameter>
          </parameters>
          <returndescription/>
          <throws/>
          <deprecated/>
        </method>
        <method name="addActionDL" returntype="void" static="true">
          <description>Inserts an application handler to a DOMElement.
It interacts with the server (GET Request Method) and downloads content.
It can be invoked by mouse click.</description>
          <parameters>
            <parameter name="$item" type="DOMElement" defaultvalue="">
              <description>The item to attach the event listener to.</description>
            </parameter>
            <parameter name="$appID" type="integer" defaultvalue="">
              <description>The application id to load.</description>
            </parameter>
            <parameter name="$viewName" type="string" defaultvalue="">
              <description>The application's view name.
If empty, get the application's default view.
Empty by default.</description>
            </parameter>
            <parameter name="$attr" type="array" defaultvalue="">
              <description>An associative array as a number of attributes to be sent to the server along with the request (attrName -&amp;amp;gt; attrValue).</description>
            </parameter>
          </parameters>
          <returndescription/>
          <throws/>
          <deprecated/>
        </method>
        <method name="addAsyncATTR" returntype="void" static="true">
          <description>Inserts a number of attributes to be sent to the server along with the request.</description>
          <parameters>
            <parameter name="$item" type="DOMElement" defaultvalue="">
              <description>The item to receive the attributes.
This must be the element that will trigger the event.</description>
            </parameter>
            <parameter name="$attr" type="array" defaultvalue="">
              <description>An associative array as a number of attributes to be sent to the server along with the request (attrName -&amp;gt; attrValue).</description>
            </parameter>
          </parameters>
          <returndescription/>
          <throws/>
          <deprecated/>
        </method>
      </scope>
      <scope type="protected"/>
      <scope type="private">
        <method name="getAction" returntype="void" static="true">
          <description>It creates and returns an action array indicating the action that will be committed upon request.</description>
          <parameters>
            <parameter name="$appID" type="integer" defaultvalue="">
              <description>The application id to load.</description>
            </parameter>
            <parameter name="$viewName" type="string" defaultvalue="">
              <description>The application's view name.
If empty, get the application's default view.
Empty by default.</description>
            </parameter>
            <parameter name="$holder" type="string" defaultvalue="">
              <description>The DOM holder/receiver where the content will go.
It's a CSS selector.
If left empty, the content will decide the holder. If the content's holder is also empty, it goes as child of the sender.</description>
            </parameter>
            <parameter name="$loading" type="boolean" defaultvalue="">
              <description>If true, set the page loading indicator.
False by default.</description>
            </parameter>
          </parameters>
          <returndescription/>
          <throws/>
          <deprecated/>
        </method>
      </scope>
    </methods>
  </class>
</manual>
