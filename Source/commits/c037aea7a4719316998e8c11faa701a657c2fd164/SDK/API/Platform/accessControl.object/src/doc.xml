<?xml version="1.0" encoding="UTF-8"?>
<manual library="API" package="Platform" namespace="\">
  <class name="accessControl" abstract="">
    <info>
      <version>0.1</version>
      <build>3</build>
      <datecreated>1415193454</datecreated>
      <daterevised>1425389640</daterevised>
      <extends/>
      <implements/>
      <throws/>
      <title>Internal Access Control</title>
      <description>This is the proxy class which is responsible for letting the API execute internal functions and prevent others from executing closed functions and features.

It has no effect to developers. It just gives valuable (not sensitive) information for controlling the flow and the hierarchy of execution.</description>
      <deprecated/>
    </info>
    <constants/>
    <properties>
      <scope type="public"/>
      <scope type="protected"/>
      <scope type="private"/>
    </properties>
    <methods>
      <scope type="public">
        <method name="internalCall" returntype="boolean" static="true">
          <description>Check if the call was internal (any SDK Library).</description>
          <parameters>
            <parameter name="$level" type="integer" defaultvalue="">
              <description>The level of the debug backtrace depth to check for the internal call.
The default level is 2, for SDK functions.</description>
            </parameter>
          </parameters>
          <returndescription>True if the call is internal, false otherwise.</returndescription>
          <throws/>
          <deprecated/>
        </method>
      </scope>
      <scope type="protected"/>
      <scope type="private">
        <method name="checkClass" returntype="boolean">
          <description>Checks whether a given class is in the given trace slice.</description>
          <parameters>
            <parameter name="$trace" type="array" defaultvalue="">
              <description>The execution stack trace slice as given by the debug_backtrace() function.</description>
            </parameter>
            <parameter name="$class" type="string" defaultvalue="">
              <description>The class which the call must abide.</description>
            </parameter>
          </parameters>
          <returndescription>True on success, false otherwise.</returndescription>
          <throws/>
          <deprecated/>
        </method>
      </scope>
    </methods>
  </class>
</manual>
