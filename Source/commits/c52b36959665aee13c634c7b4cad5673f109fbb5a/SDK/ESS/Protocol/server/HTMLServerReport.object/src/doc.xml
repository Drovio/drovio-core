<?xml version="1.0" encoding="UTF-8"?>
<manual library="ESS" package="Protocol" namespace="\server">
  <class name="HTMLServerReport" abstract="" namespace="">
    <info>
      <version/>
      <datecreated>1362741780</datecreated>
      <daterevised>1402567412</daterevised>
      <extends>\ESS\Protocol\server\ServerReport</extends>
      <implements/>
      <throws/>
      <title>HTML Server Report</title>
      <description>Creates an asynchronous server report in HTML format according to user request.</description>
      <deprecated/>
    </info>
    <constants>
      <const type="string" name="REPLACE_METHOD">
        <description>The replace method identified.</description>
      </const>
      <const type="string" name="APPEND_METHOD">
        <description>The append method identified.</description>
      </const>
      <const type="string" name="CONTENT_DATA">
        <description>The content "data" type.</description>
      </const>
      <const type="string" name="CONTENT_ACTION">
        <description>The content "action" type.</description>
      </const>
    </constants>
    <properties>
      <scope type="public"/>
      <scope type="protected"/>
      <scope type="private"/>
    </properties>
    <methods>
      <scope type="public">
        <method name="get" returntype="string" static="true" class="undefined">
          <description>Returns the server report</description>
          <parameters/>
          <deprecated/>
          <returndescription/>
          <throws/>
        </method>
        <method name="addContent" returntype="ServerReport" static="true" class="undefined">
          <description>Adds a content report to the report stack</description>
          <parameters>
            <parameter name="$content" type="DOMElement" defaultvalue="">
              <description>The body of the report content</description>
            </parameter>
            <parameter name="$type" type="string" defaultvalue="">
              <description>The content's type</description>
            </parameter>
            <parameter name="$holder" type="string" defaultvalue="">
              <description>The holder where the content will be inserted in the DOM.
It's a CSS selector.</description>
            </parameter>
            <parameter name="$method" type="string" defaultvalue="">
              <description>Defines whether the content will replace the existing or will be appended.</description>
            </parameter>
          </parameters>
          <deprecated/>
          <returndescription/>
          <throws/>
        </method>
      </scope>
      <scope type="protected">
        <method name="getReport" returntype="string" static="true">
          <description>Builds the entire report with the head and the body and returns the html generated.</description>
          <parameters/>
          <deprecated/>
          <returndescription/>
          <throws/>
        </method>
        <method name="getReportContent" returntype="DOMElement" static="true">
          <description>Creates a report content as a DOMElement inside the report.</description>
          <parameters>
            <parameter name="$type" type="string" defaultvalue="">
              <description>The report type.</description>
            </parameter>
            <parameter name="$context" type="DOMElement" defaultvalue="">
              <description>The report context.</description>
            </parameter>
            <parameter name="$holder" type="string" defaultvalue="">
              <description>The holder where the content will be inserted in the DOM.
It's a CSS selector.</description>
            </parameter>
            <parameter name="$method" type="string" defaultvalue="">
              <description>Defines whether the content will replace the existing or will be appended.
Accepted Values:
- "replace"
- "append"</description>
            </parameter>
          </parameters>
          <deprecated/>
          <returndescription/>
          <throws/>
        </method>
      </scope>
      <scope type="private">
        <method name="setModuleResource" returntype="void" static="true" class="undefined">
          <description>Adds a header to the report indicating the module being loaded.</description>
          <parameters/>
          <deprecated/>
          <returndescription/>
          <throws/>
        </method>
      </scope>
    </methods>
  </class>
</manual>
