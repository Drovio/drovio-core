<?xml version="1.0" encoding="UTF-8"?>
<manual>
  <class name="importer" abstract="" namespace="\">
    <info>
      <version/>
      <datecreated>1364379060</datecreated>
      <daterevised>1367832417</daterevised>
      <extends/>
      <implements/>
      <title>System Importer</title>
      <description>It is used to import all files in the system.
Classes and resources.</description>
      <deprecated/>
    </info>
    <constants/>
    <properties>
      <scope type="public"/>
      <scope type="protected"/>
      <scope type="private">
        <prop static="true" type="array" name="log">
          <description>Log messages</description>
        </prop>
        <prop static="true" type="array" name="loaded" class="undefined">
          <description>Loaded classes</description>
        </prop>
      </scope>
    </properties>
    <methods>
      <scope type="public">
        <method static="true" name="import" returntype="void">
          <description>Import an SDK Object from the given library and package.</description>
          <parameters>
            <parameter name="$library" type="string" defaultvalue="">
              <description>The library name</description>
            </parameter>
            <parameter name="$package" type="string" defaultvalue="">
              <description>The package name</description>
            </parameter>
            <parameter name="$class" type="string" defaultvalue="">
              <description>The full name of the class (including namespaces separated by "::")</description>
            </parameter>
            <parameter name="$strict" type="boolean" defaultvalue="">
              <description>Indicates whether the object will be forced to load from latest.</description>
            </parameter>
          </parameters>
          <deprecated/>
        </method>
        <method static="true" name="incl" returntype="boolean">
          <description>Include file (doesn't throw exception...)</description>
          <parameters>
            <parameter name="$path" type="string" defaultvalue="">
              <description>The filepath</description>
            </parameter>
            <parameter name="$root" type="boolean" defaultvalue="">
              <description>Indicator that defines whether the path will be normalized to system's root</description>
            </parameter>
            <parameter name="$once" type="boolean" defaultvalue="">
              <description>Include once or not</description>
            </parameter>
          </parameters>
          <deprecated/>
        </method>
        <method static="true" name="req" returntype="boolean">
          <description>Require file (throws exception...)</description>
          <parameters>
            <parameter name="$path" type="string" defaultvalue="">
              <description>The filepath</description>
            </parameter>
            <parameter name="$root" type="boolean" defaultvalue="">
              <description>Indicator that defines whether the path will be normalized to system's root</description>
            </parameter>
            <parameter name="$once" type="boolean" defaultvalue="">
              <description>Require once or not</description>
            </parameter>
          </parameters>
          <deprecated/>
        </method>
      </scope>
      <scope type="protected"/>
      <scope type="private">
        <method static="true" name="checkLoaded" returntype="boolean" class="undefined">
          <description>Checks if a class has already been loaded.</description>
          <parameters>
            <parameter name="$library" type="string" defaultvalue="">
              <description>The object's library name.</description>
            </parameter>
            <parameter name="$package" type="string" defaultvalue="">
              <description>The object's package name.</description>
            </parameter>
            <parameter name="$class" type="string" defaultvalue="">
              <description>The object's full name (including namespace).</description>
            </parameter>
          </parameters>
          <deprecated/>
        </method>
        <method static="true" name="setLoaded" returntype="void" class="undefined">
          <description>Sets a object as loaded.</description>
          <parameters>
            <parameter name="$library" type="string" defaultvalue="">
              <description>The object's library name.</description>
            </parameter>
            <parameter name="$package" type="string" defaultvalue="">
              <description>The object's package name.</description>
            </parameter>
            <parameter name="$class" type="string" defaultvalue="">
              <description>The object's full name (including namespace).</description>
            </parameter>
          </parameters>
          <deprecated/>
        </method>
        <method static="true" name="log" returntype="void">
          <description>Logs messages temporarily and then flush to logger</description>
          <parameters>
            <parameter name="$message" type="string" defaultvalue="">
              <description>The message log</description>
            </parameter>
          </parameters>
          <deprecated/>
        </method>
        <method static="true" name="flushLog" returntype="void" class="undefined">
          <description>Flushes the logs to the logger</description>
          <parameters/>
          <deprecated/>
        </method>
      </scope>
    </methods>
  </class>
</manual>
