<?xml version="1.0" encoding="UTF-8"?>
<manual library="RTL" package="Products" namespace="\global">
  <class name="globalProduct" abstract="">
    <info>
      <version>0.1</version>
      <build>1</build>
      <datecreated>1418637316</datecreated>
      <daterevised>1418637316</daterevised>
      <extends/>
      <implements/>
      <throws/>
      <title>Global Product Manager</title>
      <description>Manages global products.
Create new product, update and get information.</description>
      <deprecated/>
    </info>
    <constants/>
    <properties>
      <scope type="public"/>
      <scope type="protected">
        <prop type="integer" name="globalProductID">
          <description>The global product id.</description>
        </prop>
      </scope>
      <scope type="private">
        <prop type="dbConnection" name="dbc">
          <description>The Redback retail database connection manager.</description>
        </prop>
      </scope>
    </properties>
    <methods>
      <scope type="public">
        <method name="__construct" returntype="void">
          <description>Initialize the product.</description>
          <parameters>
            <parameter name="$id" type="integer" defaultvalue="">
              <description>The global product id.
Leave empty for creating a new product with create().</description>
            </parameter>
          </parameters>
          <returndescription/>
          <throws/>
          <deprecated/>
        </method>
        <method name="initWithCode" returntype="boolean">
          <description>Initialize the global product with a given product code (EAN, UPC etc.)</description>
          <parameters>
            <parameter name="$productCodeType" type="integer" defaultvalue="">
              <description>The product code type.
It references to EAN, UPC and other code types from the retail database.</description>
            </parameter>
            <parameter name="$productCode" type="integer" defaultvalue="">
              <description>The product code.</description>
            </parameter>
          </parameters>
          <returndescription>True if the product code exists and it is connected to a global product, False otherwise.</returndescription>
          <throws/>
          <deprecated/>
        </method>
        <method name="info" returntype="array">
          <description>Get all product information.</description>
          <parameters/>
          <returndescription>An array of all product information, including hierarchy information.</returndescription>
          <throws/>
          <deprecated/>
        </method>
      </scope>
      <scope type="protected">
        <method name="create" returntype="boolean">
          <description>Create a new global product.</description>
          <parameters>
            <parameter name="$hierarchyID" type="integer" defaultvalue="">
              <description>The product hierarchy id.</description>
            </parameter>
            <parameter name="$title" type="string" defaultvalue="">
              <description>The product title.</description>
            </parameter>
            <parameter name="$description" type="string" defaultvalue="">
              <description>The product description.
It is empty by default.</description>
            </parameter>
          </parameters>
          <returndescription>True on success, false on failure.</returndescription>
          <throws/>
          <deprecated/>
        </method>
        <method name="update" returntype="boolean">
          <description>Update global product information.</description>
          <parameters>
            <parameter name="$title" type="string" defaultvalue="">
              <description>The product title.</description>
            </parameter>
            <parameter name="$description" type="string" defaultvalue="">
              <description>The product description.
It is empty by default.</description>
            </parameter>
          </parameters>
          <returndescription>True on success, false on failure.</returndescription>
          <throws/>
          <deprecated/>
        </method>
      </scope>
      <scope type="private"/>
    </methods>
  </class>
</manual>
