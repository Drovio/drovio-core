<?xml version="1.0" encoding="UTF-8"?>
<manual>
  <class name="documentationViewer" abstract="" namespace="\">
    <info>
      <version/>
      <datecreated>1366030500</datecreated>
      <daterevised>1381138556</daterevised>
      <extends>\ESS\Prototype\UIObjectPrototype</extends>
      <implements/>
      <throws/>
      <title>Class Documentation Viewer</title>
      <description>Class for viewing the documentation of the system's SDK classes.</description>
      <deprecated/>
    </info>
    <constants>
      <const type="" name="SECID_INFO">
        <description/>
      </const>
      <const type="" name="SECID_CONST">
        <description/>
      </const>
      <const type="" name="SECID_PROPS">
        <description/>
      </const>
      <const type="" name="SECID_METHS">
        <description/>
      </const>
    </constants>
    <properties>
      <scope type="public"/>
      <scope type="protected"/>
      <scope type="private">
        <prop type="string" name="objectName">
          <description>The object name.</description>
        </prop>
        <prop type="string" name="classDocumentor">
          <description>The library name.</description>
        </prop>
      </scope>
    </properties>
    <methods>
      <scope type="public">
        <method name="__construct" returntype="void">
          <description>This is the constructor method.
Initializes the object variables.</description>
          <parameters>
            <parameter name="$libName" type="string" defaultvalue="">
              <description>The library name.</description>
            </parameter>
            <parameter name="$packageName" type="string" defaultvalue="">
              <description>The package name.</description>
            </parameter>
            <parameter name="$nsName" type="string" defaultvalue="">
              <description>The object namespace (separated by "_" or "::")</description>
            </parameter>
            <parameter name="$objectName" type="string" defaultvalue="">
              <description>The object name.</description>
            </parameter>
            <parameter name="$domain" type="" defaultvalue="">
              <description/>
            </parameter>
          </parameters>
          <deprecated/>
          <returndescription/>
          <throws/>
        </method>
        <method name="build" returntype="documentationViewer">
          <description>Builds the entire documentation viewer.</description>
          <parameters>
            <parameter name="$level" type="" defaultvalue="">
              <description/>
            </parameter>
          </parameters>
          <deprecated/>
          <returndescription/>
          <throws/>
        </method>
      </scope>
      <scope type="protected"/>
      <scope type="private">
        <method name="buildInfo" returntype="void" class="undefined">
          <description>Builds the class information.</description>
          <parameters>
            <parameter name="$info" type="" defaultvalue="">
              <description/>
            </parameter>
          </parameters>
          <deprecated/>
          <returndescription/>
          <throws/>
        </method>
        <method name="buildDeprecated" returntype="void" class="undefined">
          <description>Builds the deprecated class notification.</description>
          <parameters>
            <parameter name="$message" type="string" defaultvalue="">
              <description>The deprecated message.</description>
            </parameter>
          </parameters>
          <deprecated/>
          <returndescription/>
          <throws/>
        </method>
        <method name="buildExtended" returntype="void">
          <description>Builds the extended specification of this class.</description>
          <parameters/>
          <deprecated/>
          <returndescription/>
          <throws/>
        </method>
        <method name="buildDescription" returntype="void">
          <description/>
          <parameters/>
          <returndescription/>
          <throws/>
          <deprecated/>
        </method>
        <method name="buildChangeLog" returntype="void">
          <description/>
          <parameters/>
          <returndescription/>
          <throws/>
          <deprecated/>
        </method>
        <method name="buildExamples" returntype="void">
          <description/>
          <parameters/>
          <returndescription/>
          <throws/>
          <deprecated/>
        </method>
        <method name="buildSection" returntype="void">
          <description/>
          <parameters>
            <parameter name="$header" type="" defaultvalue="">
              <description/>
            </parameter>
            <parameter name="$content" type="" defaultvalue="">
              <description/>
            </parameter>
          </parameters>
          <returndescription/>
          <throws/>
          <deprecated/>
        </method>
        <method name="buildError" returntype="void">
          <description/>
          <parameters>
            <parameter name="$message" type="" defaultvalue="">
              <description/>
            </parameter>
          </parameters>
          <returndescription/>
          <throws/>
          <deprecated/>
        </method>
        <method name="getPropertyDeclaration" returntype="DOMElement">
          <description>Builds a property declaration DOMElement and returns it.</description>
          <parameters>
            <parameter name="$scope" type="string" defaultvalue="">
              <description>The property scope.</description>
            </parameter>
            <parameter name="$prop" type="array" defaultvalue="">
              <description>The property information.</description>
            </parameter>
          </parameters>
          <deprecated/>
          <returndescription/>
          <throws/>
        </method>
        <method name="getConstantDeclaration" returntype="DOMElement" class="undefined">
          <description>Builds a constant declaration DOMElement and returns it.</description>
          <parameters>
            <parameter name="$const" type="array" defaultvalue="">
              <description>The constant information.</description>
            </parameter>
          </parameters>
          <deprecated/>
          <returndescription/>
          <throws/>
        </method>
        <method name="getMethodDeclaration" returntype="DOMElement">
          <description>Builds a method declaration DOMElement and returns it.</description>
          <parameters>
            <parameter name="$scope" type="string" defaultvalue="">
              <description>The scope of the method.</description>
            </parameter>
            <parameter name="$method" type="array" defaultvalue="">
              <description>The method information.</description>
            </parameter>
          </parameters>
          <deprecated/>
          <returndescription/>
          <throws/>
        </method>
      </scope>
    </methods>
  </class>
</manual>
