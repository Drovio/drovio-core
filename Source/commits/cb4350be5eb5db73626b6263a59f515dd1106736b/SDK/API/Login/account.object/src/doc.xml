<?xml version="1.0" encoding="UTF-8"?>
<manual library="API" package="Login" namespace="\">
  <class name="account" abstract="">
    <info>
      <version>2.0</version>
      <build>4</build>
      <datecreated>1447267471</datecreated>
      <daterevised>1450033121</daterevised>
      <extends>
        <object>\DRVC\Profile\account</object>
      </extends>
      <implements/>
      <throws/>
      <title>Drovio Login Account Interface</title>
      <description>Manages the account login for the drovio platform using the drovio identity.</description>
      <deprecated/>
    </info>
    <constants>
      <const type="string" name="ID_TEAM_NAME">
        <description>The system team name for the identity database.</description>
      </const>
    </constants>
    <properties>
      <scope type="public"/>
      <scope type="protected"/>
      <scope type="private">
        <prop type="account" name="instance" static="true">
          <description>The platform account instance.</description>
        </prop>
      </scope>
    </properties>
    <methods>
      <scope type="public">
        <method name="getInstance" returntype="account" static="true">
          <description>Get an account instance.</description>
          <parameters/>
          <returndescription>The account instance.</returndescription>
          <throws/>
          <deprecated/>
        </method>
        <method name="login" returntype="boolean">
          <description>Login the account using the drovio identity.</description>
          <parameters>
            <parameter name="$username" type="string" defaultvalue="">
              <description>The account username.
It supports the account email too.</description>
            </parameter>
            <parameter name="$password" type="string" defaultvalue="">
              <description>The account password.</description>
            </parameter>
            <parameter name="$rememberme" type="boolean" defaultvalue="">
              <description>Whether to remember the user or not.
Duration: 1 month.</description>
            </parameter>
          </parameters>
          <returndescription>True on success, false on authentication failure.</returndescription>
          <throws/>
          <deprecated/>
        </method>
        <method name="updateSession" returntype="void">
          <description>Update the current account session and renew cookies if necessary.</description>
          <parameters/>
          <returndescription/>
          <throws/>
          <deprecated/>
        </method>
        <method name="setCookies" returntype="void">
          <description>Set the proper cookies for the current account session.</description>
          <parameters>
            <parameter name="$authToken" type="string" defaultvalue="">
              <description>The authentication token to set in cookies.</description>
            </parameter>
            <parameter name="$rememberme" type="boolean" defaultvalue="">
              <description>Set the cookie duration to session or longer.</description>
            </parameter>
          </parameters>
          <returndescription/>
          <throws/>
          <deprecated/>
        </method>
        <method name="getAuthToken" returntype="integer">
          <description>Gets the current logged in account id.</description>
          <parameters/>
          <returndescription>The account id.</returndescription>
          <throws/>
          <deprecated/>
        </method>
        <method name="getSessionID" returntype="integer">
          <description>Get the current session id.
This is for backwards compatibility with the old cookies.</description>
          <parameters/>
          <returndescription>The current session id.</returndescription>
          <throws/>
          <deprecated/>
        </method>
        <method name="validate" returntype="boolean">
          <description>Validates if the user is logged in.
If session tokens are invalid, the user will be logged out.</description>
          <parameters/>
          <returndescription>True on success, false on failure.</returndescription>
          <throws/>
          <deprecated/>
        </method>
        <method name="logout" returntype="void">
          <description>Logout the account from the system.
Delete active session.
Delete cookies.</description>
          <parameters/>
          <returndescription/>
          <throws/>
          <deprecated/>
        </method>
        <method name="resetPassword" returntype="boolean">
          <description>Update the account's password given the reset id token.</description>
          <parameters>
            <parameter name="$resetID" type="string" defaultvalue="">
              <description>The reset id.</description>
            </parameter>
            <parameter name="$newPassword" type="string" defaultvalue="">
              <description>The new account password.</description>
            </parameter>
          </parameters>
          <returndescription>True on success, false on failure.</returndescription>
          <throws/>
          <deprecated/>
        </method>
      </scope>
      <scope type="protected">
        <method name="__construct" returntype="void">
          <description>Create a new account instance for the platform identity.</description>
          <parameters/>
          <returndescription/>
          <throws/>
          <deprecated/>
        </method>
        <method name="getAccountSessionInstance" returntype="accountSession">
          <description>Get an accountSession instance for the current account.</description>
          <parameters/>
          <returndescription>The accountSession instance.</returndescription>
          <throws/>
          <deprecated/>
        </method>
      </scope>
      <scope type="private"/>
    </methods>
  </class>
</manual>
