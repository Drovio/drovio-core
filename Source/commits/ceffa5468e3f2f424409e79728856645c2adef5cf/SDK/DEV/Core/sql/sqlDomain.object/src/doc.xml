<?xml version="1.0" encoding="UTF-8"?>
<manual library="DEV" package="Core" namespace="\sql">
  <class name="sqlDomain" abstract="">
    <info>
      <version>0.1</version>
      <build>3</build>
      <datecreated>1396338394</datecreated>
      <daterevised>1428397312</daterevised>
      <extends/>
      <implements/>
      <throws/>
      <title>Developer's Query Domain Manager</title>
      <description>Manages all query domains and the entire sql library.</description>
      <deprecated/>
    </info>
    <constants>
      <const type="string" name="EXPORT_PATH">
        <description>The system library publish folder.</description>
      </const>
    </constants>
    <properties>
      <scope type="public"/>
      <scope type="protected"/>
      <scope type="private"/>
    </properties>
    <methods>
      <scope type="public">
        <method name="create" returntype="boolean" static="true">
          <description>Create a new domain.</description>
          <parameters>
            <parameter name="$name" type="string" defaultvalue="">
              <description>The domain name.</description>
            </parameter>
            <parameter name="$parent" type="string" defaultvalue="">
              <description>The parent domain separated by ".".
Leave empty for root domain.</description>
            </parameter>
          </parameters>
          <returndescription>True on success, false on failure.</returndescription>
          <throws/>
          <deprecated/>
        </method>
        <method name="remove" returntype="boolean" static="true">
          <description>Remove an sql domain from the map.
The domain must be empty of queries and other domains.</description>
          <parameters>
            <parameter name="$domain" type="string" defaultvalue="">
              <description>The domain name (separated by ".").</description>
            </parameter>
          </parameters>
          <returndescription>True on success, false on failure.</returndescription>
          <throws/>
          <deprecated/>
        </method>
        <method name="addQuery" returntype="boolean" static="true">
          <description>Add an sql query index entry to the given domain.</description>
          <parameters>
            <parameter name="$domain" type="string" defaultvalue="">
              <description>The query domain separated by ".".</description>
            </parameter>
            <parameter name="$queryID" type="string" defaultvalue="">
              <description>The query id.</description>
            </parameter>
            <parameter name="$title" type="string" defaultvalue="">
              <description>The query title.</description>
            </parameter>
          </parameters>
          <returndescription>True on success, false on failure.</returndescription>
          <throws/>
          <deprecated/>
        </method>
        <method name="removeQuery" returntype="boolean" static="true">
          <description>Remove an sql query from the sql map index file.</description>
          <parameters>
            <parameter name="$domain" type="string" defaultvalue="">
              <description>The query domain separated by ".".</description>
            </parameter>
            <parameter name="$queryID" type="string" defaultvalue="">
              <description>The query id.</description>
            </parameter>
          </parameters>
          <returndescription>True on success, false on failure.</returndescription>
          <throws/>
          <deprecated/>
        </method>
        <method name="updateQuery" returntype="boolean" static="true">
          <description>Update a query's name in the mapping file.</description>
          <parameters>
            <parameter name="$queryID" type="string" defaultvalue="">
              <description>The query id.</description>
            </parameter>
            <parameter name="$title" type="string" defaultvalue="">
              <description>The query title.</description>
            </parameter>
          </parameters>
          <returndescription>True on success, false on failure.</returndescription>
          <throws/>
          <deprecated/>
        </method>
        <method name="getQueries" returntype="array" static="true">
          <description>Gets the sql queries of the domain.</description>
          <parameters>
            <parameter name="$domain" type="string" defaultvalue="">
              <description>The domain separated by ".".</description>
            </parameter>
          </parameters>
          <returndescription>An array of queries by key as the query id and the title as value.</returndescription>
          <throws/>
          <deprecated/>
        </method>
        <method name="getList" returntype="array" static="true">
          <description>Gets the list of all domains</description>
          <parameters>
            <parameter name="$full" type="boolean" defaultvalue="">
              <description>If full, the return array is a list of full names.
Otherwise, it is a nested array.</description>
            </parameter>
          </parameters>
          <returndescription>Returns a list of domains in the library.</returndescription>
          <throws/>
          <deprecated/>
        </method>
        <method name="getMapFilepath" returntype="string" static="true">
          <description>Get the sql map file path.</description>
          <parameters/>
          <returndescription>The map index file path.</returndescription>
          <throws/>
          <deprecated/>
        </method>
        <method name="updateMapFilepath" returntype="string" static="true">
          <description>Updates the vcs item of the map file.</description>
          <parameters/>
          <returndescription>The trunk path to the map index file.</returndescription>
          <throws/>
          <deprecated/>
        </method>
        <method name="publish" returntype="void" static="true">
          <description>Publish all sql library packages to the server.</description>
          <parameters>
            <parameter name="$branchName" type="string" defaultvalue="">
              <description>The branch to publish.</description>
            </parameter>
          </parameters>
          <returndescription/>
          <throws/>
          <deprecated/>
        </method>
      </scope>
      <scope type="protected"/>
      <scope type="private">
        <method name="getMapfileItemID" returntype="string" static="true">
          <description>Get the map index file id.</description>
          <parameters/>
          <returndescription>The item id.</returndescription>
          <throws/>
          <deprecated/>
        </method>
        <method name="getSubDomains" returntype="array">
          <description>Get the subdomains of a domain as a nested array. It is a recursive function.</description>
          <parameters>
            <parameter name="$parser" type="DOMParser" defaultvalue="">
              <description>The parser used to parse the map file.</description>
            </parameter>
            <parameter name="$base" type="DOMElement" defaultvalue="">
              <description>The base domain element.</description>
            </parameter>
          </parameters>
          <returndescription>A nested array of subdomains.</returndescription>
          <throws/>
          <deprecated/>
        </method>
        <method name="getSubDomainsString" returntype="array">
          <description>Get the subdomains of a domain as a full name array.</description>
          <parameters>
            <parameter name="$parser" type="DOMParser" defaultvalue="">
              <description>The parser used to parse the map file.</description>
            </parameter>
            <parameter name="$base" type="DOMElement" defaultvalue="">
              <description>The base domain element.</description>
            </parameter>
          </parameters>
          <returndescription>An array of subdomains as full names.</returndescription>
          <throws/>
          <deprecated/>
        </method>
      </scope>
    </methods>
  </class>
</manual>
