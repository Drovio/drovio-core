<?xml version="1.0" encoding="UTF-8"?>
<manual library="ENP" package="Relations" namespace="\">
  <class name="ePersonInfo" abstract="">
    <info>
      <version>0.1</version>
      <build>1</build>
      <datecreated>1446574806</datecreated>
      <daterevised>1446574806</daterevised>
      <extends/>
      <implements/>
      <throws/>
      <title>Person Custom Info</title>
      <description>Manages custom information for each person.
All the information is being encoded into a single json.</description>
      <deprecated/>
    </info>
    <constants/>
    <properties>
      <scope type="public"/>
      <scope type="protected">
        <prop type="integer" name="personID">
          <description>The current person id.</description>
        </prop>
      </scope>
      <scope type="private">
        <prop type="array" name="info">
          <description>The current person info.</description>
        </prop>
        <prop type="boolean" name="valid">
          <description>Whether the person is valid with the current team.</description>
        </prop>
      </scope>
    </properties>
    <methods>
      <scope type="public">
        <method name="__construct" returntype="void">
          <description>Create an instance of the person info manager.</description>
          <parameters>
            <parameter name="$personID" type="integer" defaultvalue="">
              <description>The person id to manage info for.</description>
            </parameter>
          </parameters>
          <returndescription/>
          <throws/>
          <deprecated/>
        </method>
        <method name="get" returntype="mixed">
          <description>Get an info value.</description>
          <parameters>
            <parameter name="$name" type="string" defaultvalue="">
              <description>The info name.</description>
            </parameter>
          </parameters>
          <returndescription>If given a name, it will return the value.
If the value doesn't exist, return NULL.
If no name is given, return all values in an associative array.</returndescription>
          <throws/>
          <deprecated/>
        </method>
        <method name="set" returntype="boolean">
          <description>Set a new info value.</description>
          <parameters>
            <parameter name="$name" type="string" defaultvalue="">
              <description>The info name.</description>
            </parameter>
            <parameter name="$value" type="string" defaultvalue="">
              <description>The info value.</description>
            </parameter>
          </parameters>
          <returndescription>True on success, false on failure.</returndescription>
          <throws/>
          <deprecated/>
        </method>
        <method name="setAll" returntype="boolean">
          <description>Set all the information for the person.</description>
          <parameters>
            <parameter name="$info" type="array" defaultvalue="">
              <description>An associative array of all the name-value pairs.</description>
            </parameter>
          </parameters>
          <returndescription>True on success, false on failure.</returndescription>
          <throws/>
          <deprecated/>
        </method>
        <method name="remove" returntype="boolean">
          <description>Remove the given value from the info.</description>
          <parameters>
            <parameter name="$name" type="string" defaultvalue="">
              <description>The info name to remove.</description>
            </parameter>
          </parameters>
          <returndescription>True on success, false on failure.</returndescription>
          <throws/>
          <deprecated/>
        </method>
      </scope>
      <scope type="protected"/>
      <scope type="private">
        <method name="validate" returntype="boolean">
          <description>Validate whether the given person is member of the current team.</description>
          <parameters/>
          <returndescription>True if valid, false otherwise.</returndescription>
          <throws/>
          <deprecated/>
        </method>
      </scope>
    </methods>
  </class>
</manual>
