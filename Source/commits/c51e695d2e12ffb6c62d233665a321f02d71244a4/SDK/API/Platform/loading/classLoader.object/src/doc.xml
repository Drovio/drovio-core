<?xml version="1.0" encoding="UTF-8"?>
<manual>
  <class name="classLoader" abstract="" namespace="\loading">
    <info>
      <version/>
      <datecreated>1364899740</datecreated>
      <daterevised>1376126902</daterevised>
      <extends/>
      <implements/>
      <throws/>
      <title>Class Loader</title>
      <description>Loads SDK classes from repositories or from latest.</description>
      <deprecated/>
    </info>
    <constants/>
    <properties>
      <scope type="public"/>
      <scope type="protected"/>
      <scope type="private">
        <prop type="string" name="vcsPath" static="true">
          <description>The repository path.</description>
        </prop>
        <prop type="string" name="trunkPath" static="true">
          <description>The inner trunk's path.</description>
        </prop>
        <prop type="string" name="innerClassPath" static="true">
          <description>The object's inner class path.</description>
        </prop>
      </scope>
    </properties>
    <methods>
      <scope type="public">
        <method name="load" returntype="void" static="true">
          <description>Loads the SDK object.</description>
          <parameters>
            <parameter name="$library" type="string" defaultvalue="">
              <description>The object's library.</description>
            </parameter>
            <parameter name="$package" type="string" defaultvalue="">
              <description>The object's package.</description>
            </parameter>
            <parameter name="$class" type="string" defaultvalue="">
              <description>The full name (including namespace) of the object.</description>
            </parameter>
          </parameters>
          <deprecated/>
          <returndescription/>
          <throws/>
        </method>
        <method name="getTesterStatus" returntype="boolean" static="true" class="undefined">
          <description>Returns whether the user has set the given package for testing.</description>
          <parameters>
            <parameter name="$libName" type="string" defaultvalue="">
              <description>The library name.</description>
            </parameter>
            <parameter name="$packageName" type="string" defaultvalue="">
              <description>The package name.</description>
            </parameter>
          </parameters>
          <deprecated/>
          <returndescription/>
          <throws/>
        </method>
      </scope>
      <scope type="protected"/>
      <scope type="private">
        <method name="packageStatus" returntype="boolean" static="true" class="undefined">
          <description>Returns whether the user has set the given package for testing.</description>
          <parameters>
            <parameter name="$package" type="string" defaultvalue="">
              <description>The merged package name.</description>
            </parameter>
          </parameters>
          <deprecated/>
          <returndescription/>
          <throws/>
        </method>
        <method name="getTesterPackages" returntype="array" static="true" class="undefined">
          <description>Get all tester packages.</description>
          <parameters/>
          <deprecated/>
          <returndescription/>
          <throws/>
        </method>
        <method name="testerStatus" returntype="boolean" static="true" class="undefined">
          <description>Returns the global tester's status.</description>
          <parameters/>
          <deprecated/>
          <returndescription/>
          <throws/>
        </method>
        <method name="getCookie" returntype="mixed" static="true" class="undefined">
          <description>Get the value of a cookie with the given name.</description>
          <parameters>
            <parameter name="$name" type="string" defaultvalue="">
              <description>The cookie's name.</description>
            </parameter>
          </parameters>
          <deprecated/>
          <returndescription/>
          <throws/>
        </method>
      </scope>
    </methods>
  </class>
</manual>
